{"version":3,"sources":["components/Cards.jsx","logo.svg","components/Choice.jsx","components/Player.jsx","components/PlayerConfig.jsx","components/Slot.jsx","components/Session.jsx","components/Menu.jsx","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["coveredCard","name","beat","card","message","image","emptyCard","cards","Card","props","className","style","width","src","class","alt","Choice","show","USER_TYPE","PLAYER_STATUS","playerEmpty","readonly","ok","victories","score","type","turn","choices","cardSelected","undefined","status","Player","data","title","onClick","onReady","disabled","role","PlayerConfig","useState","setData","onSubmit","event","preventDefault","onConfirmPlayer","index","value","onChange","target","Slot","onSelect","player","SESSION_STATE","emptySession","playersSlots","start","current","endRound","state","roundHasWinner","Session","setOk","useEffect","every","filter","autoShowCards","handlePlayerReady","setTimeout","handleCardSelect","getRandomInt","alert","handleRemovePlayer","j","handleConfirmPlayer","map","item","console","log","handleShowResults","cardsSelected","scores","v","i","a","indexOf","card1","card2","some","b","cardBeatTo","length","count","maxScore","Math","max","apply","hasWinner","s","winnersStatus","find","min","floor","random","Swal","fire","html","timer","timerProgressBar","willOpen","showLoading","willClose","then","result","onRemovePlayer","Menu","Game","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAIaA,G,MCJE,I,MDIc,CAC3BC,KAAM,UACNC,KAAM,CACJ,CAAEC,KAAM,GAAIC,QAAS,IACrB,CAAED,KAAM,GAAIC,QAAS,KAEvBC,MAAO,4BAGIC,EAAc,CACzBL,KAAM,QACNC,KAAM,CACJ,CAAEC,KAAM,GAAIC,QAAS,IACrB,CAAED,KAAM,GAAIC,QAAS,KAEvBC,MAAO,yBAGIE,EAAQ,CACnB,CACEN,KAAM,OACNC,KAAM,CACJ,CAAEC,KAAM,SAAUC,QAAS,uBAC3B,CAAED,KAAM,WAAYC,QAAS,0BAE/BC,MAAO,wBAET,CACEJ,KAAM,QACNC,KAAM,CACJ,CAAEC,KAAM,OAAQC,QAAS,qBACzB,CAAED,KAAM,QAASC,QAAS,0BAE5BC,MAAO,yBAET,CACEJ,KAAM,WACNC,KAAM,CACJ,CAAEC,KAAM,QAASC,QAAS,uBAC1B,CAAED,KAAM,SAAUC,QAAS,gCAE7BC,MAAO,4BAET,CACEJ,KAAM,SACNC,KAAM,CACJ,CAAEC,KAAM,QAASC,QAAS,wBAC1B,CAAED,KAAM,QAASC,QAAS,sBAE5BC,MAAO,0BAET,CACEJ,KAAM,QACNC,KAAM,CACJ,CAAEC,KAAM,WAAYC,QAAS,0BAC7B,CAAED,KAAM,OAAQC,QAAS,yBAE3BC,MAAO,0BAgBEG,EAAO,SAACC,GACnB,OACE,mCACE,qBAAKC,UAAU,OAAOC,MAAO,CAACC,MAAOH,EAAMG,MAAQH,EAAMG,MAAQ,QAAjE,SACE,qBAAKC,IAAKJ,EAAMN,KAAKE,MAAOM,MAAO,CAACC,MAAO,QAASE,MAAM,eAAeC,IAAI,oBE9ExEC,EAAS,SAACP,GACrB,OACE,sBAAKE,MAAO,CAACC,MAAO,QAApB,UACCH,EAAMN,OAASM,EAAMQ,MACpB,cAAC,EAAD,CAAMd,KAAMH,EAAaY,MAAM,UAEhCH,EAAMN,MAAQM,EAAMQ,MACnB,cAAC,EAAD,CAAMd,KAAMM,EAAMN,KAAMS,MAAM,WAE9BH,EAAMN,MACN,cAAC,EAAD,CAAMA,KAAMG,EAAWM,MAAM,cCVtBM,EACN,EADMA,EAEJ,EAGIC,EACF,EADEA,EAEG,EAFHA,EAGC,EAHDA,EAIC,EAGDC,EAAc,SAACC,GAC1B,MAAO,CACLC,IAAI,EACJrB,KAAO,GACPsB,UAAY,EACZC,MAAQ,EACRH,SAAWA,EACXI,KAAMP,EACNQ,MAAM,EACNC,QAAS,GACTC,kBAAcC,EACdZ,MAAM,EACNa,OAAQX,IAICY,EAAS,SAACtB,GACrB,OACE,sBAAKC,UAAS,0BAAqBD,EAAMiB,KAAO,aAAe,gBAA/D,UACE,sBAAKhB,UAAU,cAAf,UACGD,EAAMuB,KAAK/B,KADd,IACqBQ,EAAMuB,KAAKT,UAAY,GAAK,sBAAMT,MAAM,iCAAiCmB,MAAM,YAAnD,SAAgExB,EAAMuB,KAAKT,eAE5H,sBAAKb,UAAU,YAAf,UACE,mBAAGA,UAAU,YAAb,SACE,cAAC,EAAD,CAAQP,KAAMM,EAAMuB,KAAKJ,aAAcX,KAAMR,EAAMQ,SAEpDR,EAAMuB,KAAKP,OAASP,GAAmBT,EAAMiB,MAC5C,wBAAQhB,UAAU,kBAAkBwB,QAASzB,EAAM0B,QAASC,UAAW3B,EAAMiB,KAA7E,oBAIDjB,EAAMuB,KAAKP,OAASP,GAAiBT,EAAMiB,MAC1C,yBAAQhB,UAAU,kBAAkBwB,QAASzB,EAAM0B,QAASC,UAAQ,EAApE,UACE,qBAAK1B,UAAU,iDAAiD2B,KAAK,SAArE,SACE,sBAAM3B,UAAU,UAAhB,0BAFJ,gBAMAD,EAAMiB,MACN,wBAAQhB,UAAU,kBAAkBwB,QAASzB,EAAM0B,QAASC,UAAQ,EAApE,qBAID3B,EAAMuB,KAAKF,QAAUX,GACpB,qBAAKT,UAAU,mBAAf,qBAEDD,EAAMuB,KAAKF,QAAUX,GACpB,sBAAKT,UAAU,sBAAf,qBAA8CD,EAAMuB,KAAKR,MAAzD,OAEDf,EAAMuB,KAAKF,QAAUX,GACpB,sBAAKT,UAAU,qBAAf,oBAA4CD,EAAMuB,KAAKR,MAAvD,OAEDf,EAAMuB,KAAKF,QAAUX,GACpB,sBAAKT,UAAU,sBAAf,mBAA4CD,EAAMuB,KAAKR,MAAvD,c,qCCjEGc,EAAe,SAAC7B,GAAW,IAAD,EAEZ8B,mBAAS9B,EAAMuB,MAFH,mBAE9BA,EAF8B,KAExBQ,EAFwB,KAsBrC,OACE,mCAEI,uBAAMC,SArBS,SAACC,GACpBA,EAAMC,iBACNlC,EAAMmC,gBAAgBnC,EAAMoC,MAA5B,2BAAuCb,GAAvC,IAA6CT,UAAW,EAAGC,MAAO,EAAGF,IAAI,MAmBrE,UACA,4CAAeb,EAAMoC,SAErB,uBAAOC,MAAOd,EAAK/B,KAAMmC,SAAUJ,EAAKP,MAAQP,EAAe6B,SAnB5C,SAACL,GACxBF,EAAQ,2BAAIR,GAAL,IAAW/B,KAAMyC,EAAMM,OAAOF,YAoBhCd,EAAKP,MAAQP,GAAiB,wBAAQgB,QAZpB,SAACQ,GACxBF,EAAQ,2BAAIR,GAAL,IAAW/B,KAAM,GAAIwB,KAAMP,MAWC,mBAC9Bc,EAAKP,MAAQP,GAAmB,wBAAQgB,QAjBxB,SAACQ,GACtBF,EAAQ,2BAAIR,GAAL,IAAW/B,KAAM,MAAOwB,KAAMP,MAgBA,iBAEjC,wBAAQO,KAAK,SAAb,sBChCKwB,EAAO,SAACxC,GAMnB,OACI,yBAAQC,UAAU,cAAcwB,QALV,WACxBzB,EAAMyC,SAASzC,EAAMN,OAIyCiC,SAAU3B,EAAM0C,OAAO1B,MAAQP,EAA3F,UACGT,EAAM0C,OAAO1B,MAAQP,GACpB,cAAC,EAAD,CAAMf,KAAMH,IAEbS,EAAM0C,OAAO1B,MAAQP,GACpB,cAAC,EAAD,CAAMf,KAAMM,EAAMN,WCTfiD,EACH,EADGA,EAEJ,EAFIA,EAGG,EAHHA,EAIA,EAJAA,EAKC,EALDA,EAMG,EAGHC,EAAe,CACxBC,aAAc,CACZlC,GAAY,GACZA,GAAY,IAEdmC,OAAO,EACPC,QAAS,KACTC,UAAU,EACVC,MAAON,EACPO,gBAAgB,GAGPC,EAAU,SAACnD,GAAW,IAAD,EAER8B,mBAASc,GAFD,mBAEzBrB,EAFyB,KAEnBQ,EAFmB,OAIZD,oBAAS,GAJG,mBAIzBjB,EAJyB,KAIrBuC,EAJqB,KAMhCC,qBAAU,WAERD,EAAM7B,EAAKsB,aAAaS,OAAM,SAACZ,EAAQN,GAAT,OAAmBM,EAAO7B,SACvD,CAACU,EAAKsB,eAETQ,qBAAU,WAYR,GATG9B,EAAKsB,aAAaU,QAAO,SAAAb,GAAM,OAAIA,EAAOrB,SAAWX,KAAuB4C,OAAM,SAAAZ,GAAM,QAAMA,EAAOvB,kBACtGY,EAAQ,2BACHR,GADE,IAEL0B,MAAQN,KAEVa,KAIEjC,EAAKwB,WAAWxB,EAAKsB,cAAgBtB,EAAKsB,aAAatB,EAAKwB,SAAS1B,SAAWX,EAKlF,OAJA+C,SACAC,YAAW,WACTC,EAAiBpE,KAChB,IAKDgC,EAAKwB,WAAWxB,EAAKsB,cAAgBtB,EAAKsB,aAAatB,EAAKwB,SAAS/B,OAASP,IAChFgD,IACAC,YAAW,WACTC,EAAiB7D,EAAM8D,EAAa,EAAE,OACrC,QAKJ,CAACrC,EAAKwB,UAETM,qBAAU,WACL9B,EAAKyB,UACNa,MAAM,eAGP,CAACtC,EAAKyB,WAET,IAIMc,EAAqB,SAAC1B,GAC1BL,EAAQ,2BAAIR,GAAL,IAAWsB,aAActB,EAAKsB,aAAaU,QAAO,SAACb,EAAQqB,GAAT,OAAeA,IAAM3B,SAG1E4B,EAAsB,SAAC5B,EAAOM,GAClCX,EAAQ,2BACHR,GADE,IAELsB,aAActB,EAAKsB,aAAaoB,KAAI,SAACC,EAAMH,GACzC,OAAQA,IAAM3B,EAASM,EAASwB,SAShCP,EAAmB,SAACjE,GACxBqC,EAAQ,2BACHR,GADE,IAELsB,aAActB,EAAKsB,aAAaoB,KAAI,SAACC,EAAMH,GACzC,OAAQA,IAAMxC,EAAKwB,QAAZ,YAAC,eAA0BmB,GAA3B,IAAiC/C,aAAczB,IAAQwE,KAEhEnB,QA1BKxB,EAAKwB,QAAU,EA2BpBE,MAAON,KAGTwB,QAAQC,IAAI7C,IAYR8C,EAAoB,WAGxB,IAAMC,EAAgB/C,EAAKsB,aACxBU,QAAO,SAAAb,GAAM,OAAIA,EAAOrB,QAAUX,KAClCuD,KAAI,SAAAvB,GAAM,OAAIA,EAAOvB,gBAKlBoD,EAFuBD,EAAcf,QAAO,SAACiB,EAAGC,EAAGC,GAAP,OAAaA,EAAEC,QAAQH,KAAOC,KAE5CR,KAAI,SAAAW,GACtC,MAAO,CACLpF,KAAMoF,EAAMpF,KACZ6C,MAAOiC,EAAcf,QAAO,SAAAsB,GAAK,ONrEf,SAACD,EAAOC,GAAR,OAAkBD,EAAMnF,KAAKqF,MAAK,SAAAC,GAAC,OAAIA,EAAErF,MAAQmF,EAAMrF,QMqEpCwF,CAAWJ,EAAOC,MAAQI,OAC/DC,MAAOZ,EAAcf,QAAO,SAAAsB,GAAK,OAAID,EAAMpF,OAASqF,EAAMrF,QAAMyF,WAG9DE,EAAWC,KAAKC,IAAIC,MAAM,KAAMf,EAAON,KAAI,SAAAlD,GAAU,OAAOA,EAAMsB,UAClEkD,EAA8D,GAAlDhB,EAAOhB,QAAO,SAAAiC,GAAC,OAAIA,EAAEnD,OAAS8C,KAAUF,QAAoE,GAApDV,EAAOhB,QAAO,SAAAiC,GAAC,OAAIA,EAAEnD,OAAS8C,KAAU,GAAGD,MAC/GO,EAAgBF,EAAY7E,EAA6BA,EAE/DqB,EAAQ,2BACHR,GADE,IAEL0B,MAAON,EACPO,eAAgBqC,EAChB1C,aAActB,EAAKsB,aAAaoB,KAAI,SAACvB,GACnC,GAAGA,EAAOrB,SAAWX,EACnB,OAAOgC,EAEP,IAAM3B,EAAQwD,EAAOmB,MAAK,SAAAF,GAAC,OAAIA,EAAEhG,OAASkD,EAAOvB,aAAa3B,QAAM6C,MAEpE,OADA8B,QAAQC,IAAI,CAACE,cAAeA,EAAeC,OAAQA,EAAQY,SAAUA,EAAUI,UAAWA,EAAWE,cAAeA,EAAe/C,OAAQA,EAAQ3B,MAAOA,IACnJ,2BACF2B,GADL,IAEE3B,MAAOA,EACPM,OAAQN,GAASoE,EAAWM,EAAgB/E,EAC5CI,UAAWC,GAASoE,GAAYI,EAAY7C,EAAO5B,UAAY,EAAI4B,EAAO5B,mBA6C9E2C,EAAoB,WAGtB1B,EAAQ,2BAAIR,GAAL,IAAW0B,MAAON,MAMvBiB,EAAe,SAAC+B,EAAKN,GAAN,OAAcD,KAAKQ,MAAMR,KAAKS,UAAYR,EAAMM,IAAQA,GAEvEnC,EAAgB,WAEpBsC,IAAKC,KAAK,CACRvE,MAAO,SACPwE,KAAM,2BACNC,MAAO,KACPC,kBAAkB,EAClBC,SAAU,WACRL,IAAKM,eAEPC,UAAW,WACThC,OAEDiC,MAAK,SAACC,QAIX,OACE,qCACKhF,EAAK0B,OAASN,GACb,qBAAK1C,UAAU,mCAAf,SACE,qBAAIA,UAAU,oBAAd,UACGsB,EAAKsB,aAAaoB,KAAI,SAACvB,EAAQN,GAC9B,OAAOM,EAAO7B,IAAM,oBAAIZ,UAAU,kBAAd,SAA0D,+BAAOyC,EAAOlD,QAAxE,mBAAiD4C,OAEtEb,EAAKsB,aAAaoB,KAAI,SAACvB,EAAQN,GAC9B,OAAQb,EAAKuB,QAAUJ,EAAO7B,IAAM,qBAAIZ,UAAU,kBAAd,UAClC,cAAC,EAAD,CAAcmC,MAAOA,EAAOb,KAAMmB,EAAQ8D,eAAgB1C,EAAoB3B,gBAAiB6B,KAC7FtB,EAAO9B,UAAY,mCAAE,wBAAQa,QAAS,kBAAMqC,EAAmB1B,IAA1C,wBAFW,qBAAmDA,OAKzF,qBAAInC,UAAU,kBAAd,UACGY,GAAM,wBAAQZ,UAAU,kBAAkBwB,QArJ7B,WAC1BM,EAAQ,2BAAIR,GAAL,IAAWsB,aAAa,GAAD,mBAAMtB,EAAKsB,cAAX,CAAyBlC,GAAY,SAoJhD,wBACNE,GAAM,wBAAQZ,UAAU,kBAAkBwB,QArIrC,WAClBM,EAAQ,2BAAIR,GAAL,IAAW0B,MAAON,EAAqBI,QAAU,MAoIrC,mBACP,wBAAQ9C,UAAU,kBAAkBwB,QAhF5B,WACpBM,EAAQa,IA+EI,kCAMPrB,EAAK0B,OAASN,GAEb,qBAAK1C,UAAU,0BAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,wBAAQA,UAAU,qBAAqBwB,QAvF7B,WACtBM,EAAQ,2BACHR,GADE,IAEL0B,MAAON,EACPI,QAAS,KACTF,aAActB,EAAKsB,aAAaoB,KAAI,SAAAC,GAAI,kCAASA,GAAT,IAAe/C,kBAAcC,WAkF3D,wBACCG,EAAK0B,OAASN,GAA2B,wBAAQ1C,UAAU,mBAAmBwB,QA9IrE,WACtBM,EAAQ,2BAAIR,GAAL,IAAW0B,MAAON,KACzBe,YAAW,WAAKW,MAAsB,MA4IgB,wBACzC9C,EAAK0B,OAASN,GAA8B,wBAAQ1C,UAAU,sBAAsBwB,QAhF3E,WACtBM,EAAQ,2BACHR,GADE,IAEL2B,gBAAgB,EAChBD,MAAON,EACPI,QAAS,EACTF,aAActB,EAAKsB,aAAaoB,KAAI,SAAAvB,GAClC,OAAO,2BACFA,GADL,IAGEvB,kBAAcC,EAEdL,MAAO,EAEPM,OAASE,EAAK2B,gBAAkBR,EAAOrB,SAAWX,EAA2CA,EAAhBgC,EAAOrB,gBAkEjC,2BAG9CE,EAAKsB,aAAaoB,KAAI,SAACvB,EAAQN,GAAT,OAAmBM,EAAO7B,IAC/C,qBAAKZ,UAAU,0BAAf,SACA,cAAC,EAAD,CAAuCsB,KAAMmB,EAAQhB,QAAS+B,EAAmBxC,KAAMmB,GAASb,EAAKwB,QAASvC,KAAMe,EAAK0B,OAASN,GAAlI,wBAA8BP,cAMrCb,EAAK0B,QAAUN,GACd,qBAAK1C,UAAU,yBAAf,SACE,qBAAKA,UAAU,MAAf,SACGH,EAAMmE,KAAI,SAAAvE,GAAI,OACb,qBAAKO,UAAU,cAAf,SACE,cAAC,EAAD,CAAMP,KAAMA,EAAM+C,SAAU,kBAAMkB,EAAiBjE,IAAOgD,OAAQnB,EAAKsB,aAAatB,EAAKwB,YAD3F,eAA0CrD,EAAKF,kBC9QlDiH,EAAO,SAACzG,GACnB,OACE,mCACA,cAAC,EAAD,OCJS0G,EAAO,SAAC1G,GACnB,OACE,cAAC,EAAD,KCOW2G,MARf,WACE,OACE,qBAAK1G,UAAU,MAAf,SACE,cAAC,EAAD,OCKS2G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21e443f6.chunk.js","sourcesContent":["\r\n\r\nimport React from 'react';\r\n\r\nexport const coveredCard =   {\r\n  name: \"Covered\", \r\n  beat: [\r\n    { card: \"\", message: \"\" },\r\n    { card: \"\", message: \"\" },\r\n  ],\r\n  image: \"assets/card_covered.png\"\r\n};\r\n\r\nexport const emptyCard =   {\r\n  name: \"Empty\", \r\n  beat: [\r\n    { card: \"\", message: \"\" },\r\n    { card: \"\", message: \"\" },\r\n  ],\r\n  image: \"assets/card_empty.png\"\r\n};\r\n\r\nexport const cards = [\r\n  {\r\n    name: \"Rock\", \r\n    beat: [\r\n      { card: \"Lizard\", message: \"Rock crushes Lizard\" },\r\n      { card: \"Scissors\", message: \"Rock crushes Scissors\" },\r\n    ],\r\n    image: \"assets/card_rock.png\"\r\n  },\r\n  {\r\n    name: \"Paper\", \r\n    beat: [\r\n      { card: \"Rock\", message: \"Paper covers Rock\" },\r\n      { card: \"Spock\", message: \"Paper disproves Spock\" },\r\n    ],\r\n    image: \"assets/card_paper.png\"\r\n  },\r\n  {\r\n    name: \"Scissors\", \r\n    beat: [\r\n      { card: \"Paper\", message: \"Scissors cuts Paper\" },\r\n      { card: \"Lizard\", message: \"Scissors decapitates Lizard\" },\r\n    ],\r\n    image: \"assets/card_scissors.png\"\r\n  },\r\n  {\r\n    name: \"Lizard\", \r\n    beat: [\r\n      { card: \"Spock\", message: \"Lizard poisons Spock\" },\r\n      { card: \"Paper\", message: \"Lizard eats Paper\" },\r\n    ],\r\n    image: \"assets/card_lizard.png\"\r\n  },\r\n  {\r\n    name: \"Spock\", \r\n    beat: [\r\n      { card: \"Scissors\", message: \"Spock smashes Scissors\" },\r\n      { card: \"Rock\", message: \"Spock vaporizes Rock\" },\r\n    ],\r\n    image: \"assets/card_spock.png\"\r\n  },\r\n];\r\n\r\nexport const cardBeatTo = (card1, card2) => card1.beat.some(b => b.card == card2.name);\r\n\r\nexport const whoWins = (card1, card2) => {\r\n  if(card1.beat.any(card => card.name == card2.name)){\r\n    return card1;\r\n  }\r\n  if(card2.beat.any(card => card.name == card1.name)){\r\n    return card2;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"card\" style={{width: props.width ? props.width : \"100%\"}}>\r\n        <img src={props.card.image} style={{width: \"100%\"}} class=\"card-img-top\" alt=\"card-image\"/>       \r\n      </div>\r\n   </>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Card, coveredCard, emptyCard } from './Cards';\r\n\r\nexport const Choice = (props) => {\r\n  return (\r\n    <div style={{width: \"100%\"}}>\r\n    {props.card && !props.show &&\r\n      <Card card={coveredCard} width=\"100px\"/>\r\n    }\r\n    {props.card && props.show &&\r\n      <Card card={props.card} width=\"100px\"/>\r\n    }\r\n    {!props.card && \r\n      <Card card={emptyCard} width=\"100px\"/>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Choice } from './Choice';\r\n\r\nexport const USER_TYPE = {\r\n  CPU: 0,\r\n  HUMAN: 1\r\n}\r\n\r\nexport const PLAYER_STATUS = {\r\n  PLAYING: 0,\r\n  ROUND_WINNER: 1,\r\n  ROUND_LOST: 2,\r\n  ROUND_TIED: 3\r\n}\r\n\r\nexport const playerEmpty = (readonly) => {\r\n  return {\r\n    ok: false,\r\n    name : \"\",\r\n    victories : 0,\r\n    score : 0,\r\n    readonly : readonly,\r\n    type: USER_TYPE.HUMAN,\r\n    turn: false,\r\n    choices: [],\r\n    cardSelected: undefined,\r\n    show: false,\r\n    status: PLAYER_STATUS.PLAYING,\r\n  }\r\n}\r\n\r\nexport const Player = (props) => {\r\n  return (\r\n    <div className={`card text-white ${props.turn ? \"bg-primary\" : \"bg-secondary\"}`}>\r\n      <div className=\"card-header\">\r\n        {props.data.name} {props.data.victories > 0 && <span class=\"badge badge-primary badge-pill\" title=\"victories\">{props.data.victories}</span>}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <p className=\"card-text\">\r\n          <Choice card={props.data.cardSelected} show={props.show} />\r\n        </p>\r\n        {props.data.type === USER_TYPE.HUMAN && props.turn &&\r\n          <button className=\"btn btn-success\" onClick={props.onReady} disabled={!props.turn}>\r\n            Ready?\r\n          </button>\r\n        }\r\n        {props.data.type === USER_TYPE.CPU && props.turn &&\r\n          <button className=\"btn btn-success\" onClick={props.onReady} disabled>\r\n            <div className=\"spinner-border  spinner-border-sm text-primary\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div> Choosing\r\n          </button>\r\n        }\r\n        {!props.turn &&\r\n          <button className=\"btn btn-success\" onClick={props.onReady} disabled>\r\n            Waiting\r\n          </button>\r\n        }\r\n        {props.data.status == PLAYER_STATUS.PLAYING &&\r\n          <div className=\"alert alert-info\">Playing</div>\r\n        }\r\n        {props.data.status == PLAYER_STATUS.ROUND_WINNER &&\r\n          <div className=\"alert alert-success\">Winner ({props.data.score})</div>\r\n        }\r\n        {props.data.status == PLAYER_STATUS.ROUND_LOST &&\r\n          <div className=\"alert alert-danger\">Loser ({props.data.score})</div>\r\n        }\r\n        {props.data.status == PLAYER_STATUS.ROUND_TIED &&\r\n          <div className=\"alert alert-success\">Tied ({props.data.score})</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { playerEmpty, USER_TYPE } from './Player';\r\n\r\nexport const PlayerConfig = (props) => {\r\n\r\n  const [data, setData ] = useState(props.data)\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.onConfirmPlayer(props.index, {...data, victories: 0, score: 0, ok: true});\r\n  }\r\n  \r\n  const handleNameChange = (event) => {\r\n    setData({...data, name: event.target.value});\r\n\r\n  }\r\n\r\n  const handleCpuClick = (event) => {\r\n    setData({...data, name: \"CPU\", type: USER_TYPE.CPU});\r\n  }\r\n  \r\n  const handleHumanClick = (event) => {\r\n    setData({...data, name: \"\", type: USER_TYPE.HUMAN});\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        <form onSubmit={handleSubmit}>\r\n        <label>Player {props.index}</label>\r\n        \r\n        <input value={data.name} disabled={data.type == USER_TYPE.CPU} onChange={handleNameChange}/>\r\n        \r\n        {data.type == USER_TYPE.CPU && <button onClick={handleHumanClick}>HUMAN</button>}\r\n        {data.type == USER_TYPE.HUMAN && <button onClick={handleCpuClick}>CPU</button>}\r\n        \r\n        <button type=\"submit\">Ok</button>\r\n        </form>\r\n\r\n      }\r\n    </>\r\n  )\r\n\r\n}","import React, { useState } from 'react';\r\nimport { Card, coveredCard } from './Cards';\r\nimport { USER_TYPE } from './Player';\r\n\r\nexport const Slot = (props) => {\r\n  //const [covered, setCovered] = useState(true);\r\n  const handleSelectClick = () => {\r\n    props.onSelect(props.card);\r\n  }\r\n\r\n  return (\r\n      <button className=\"btn m-0 p-0\" onClick={handleSelectClick} disabled={props.player.type == USER_TYPE.CPU}>\r\n        {props.player.type == USER_TYPE.CPU &&\r\n          <Card card={coveredCard} />\r\n        }\r\n        {props.player.type == USER_TYPE.HUMAN &&\r\n          <Card card={props.card} />\r\n        }\r\n      </button>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { cardBeatTo, cards, coveredCard, emptyCard } from './Cards';\r\nimport { Player, playerEmpty, PLAYER_STATUS, USER_TYPE } from './Player';\r\nimport { PlayerConfig } from './PlayerConfig';\r\nimport { Slot } from './Slot';\r\n\r\nexport const SESSION_STATE = {\r\n  CONFIG: 0,\r\n  START: 1,\r\n  PLAYER_READY: 2,\r\n  END_ROUND: 3,\r\n  SHOW_CARDS: 4,\r\n  SHOW_RESULTS: 5\r\n}\r\n\r\nexport const emptySession = {\r\n    playersSlots: [\r\n      playerEmpty(true),\r\n      playerEmpty(true),\r\n    ],\r\n    start: false,\r\n    current: null,\r\n    endRound: false,\r\n    state: SESSION_STATE.CONFIG,\r\n    roundHasWinner: false,\r\n  }\r\n\r\nexport const Session = (props) => {\r\n\r\n  const [data, setData] = useState(emptySession);\r\n  \r\n  const [ok, setOk] = useState(false);\r\n\r\n  useEffect(() => { \r\n    //update every players settings ok for start\r\n    setOk(data.playersSlots.every((player, index) => player.ok));\r\n  }, [data.playersSlots] );\r\n\r\n  useEffect(() => {\r\n\r\n    //update end of round (si todos los jugadores en estado PLAYING tienen carta seleccionada)\r\n    if(data.playersSlots.filter(player => player.status === PLAYER_STATUS.PLAYING).every(player => !!player.cardSelected)){\r\n      setData({\r\n        ...data, \r\n        state : SESSION_STATE.END_ROUND\r\n      });\r\n      autoShowCards();\r\n    }\r\n\r\n    //si el usuario actual no esta jugando porque perdio le pongo una carga cubierta\r\n    if( data.current in data.playersSlots && data.playersSlots[data.current].status === PLAYER_STATUS.ROUND_LOST) {\r\n      handlePlayerReady();\r\n      setTimeout(() => {\r\n        handleCardSelect(coveredCard);;\r\n      }, 10);\r\n      return;\r\n    }\r\n\r\n    //si el usuario actual es la maquina, dejo un tiempo de espera para que parezca que la cpu esta pensando antes de decidir\r\n    if( data.current in data.playersSlots && data.playersSlots[data.current].type === USER_TYPE.CPU) {\r\n      handlePlayerReady();\r\n      setTimeout(() => {\r\n        handleCardSelect(cards[getRandomInt(0,5)]);;\r\n      }, 500);\r\n    }\r\n\r\n\r\n\r\n  }, [data.current] );\r\n\r\n  useEffect(() => {\r\n    if(data.endRound){\r\n      alert(\"end round\")\r\n    }\r\n\r\n  }, [data.endRound] );\r\n\r\n  const nextTurn = () => {\r\n    return data.current + 1;\r\n  }\r\n\r\n  const handleRemovePlayer = (index) => {\r\n    setData({...data, playersSlots: data.playersSlots.filter((player, j) => j !== index)});\r\n  }\r\n\r\n  const handleConfirmPlayer = (index, player) =>{\r\n    setData({\r\n      ...data, \r\n      playersSlots: data.playersSlots.map((item, j) => {\r\n        return (j === index) ? player : item;\r\n      })\r\n    });\r\n  };\r\n\r\n  const handleAddPlayerSlot = () => {\r\n    setData({...data, playersSlots: [...data.playersSlots, playerEmpty(false)] });\r\n  }\r\n\r\n  const handleCardSelect = (card) => {\r\n    setData({\r\n      ...data, \r\n      playersSlots: data.playersSlots.map((item, j) => {\r\n        return (j === data.current) ? {...item, cardSelected: card} : item;\r\n      }),\r\n      current: nextTurn(),\r\n      state: SESSION_STATE.START\r\n    });\r\n\r\n    console.log(data)\r\n  }\r\n\r\n  const handleStart = () => {\r\n    setData({...data, state: SESSION_STATE.START, current : 0});\r\n  }\r\n\r\n  const handleShowCards = () => {\r\n    setData({...data, state: SESSION_STATE.SHOW_CARDS});\r\n    setTimeout(()=>{handleShowResults()}, 1000)\r\n  }\r\n\r\n  const handleShowResults = () => {\r\n\r\n\r\n    const cardsSelected = data.playersSlots\r\n      .filter(player => player.status == PLAYER_STATUS.PLAYING)\r\n      .map(player => player.cardSelected);\r\n\r\n      //este filtro es para eliminar duplicados\r\n    const cardsSelectedUniques = cardsSelected.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n    const scores = cardsSelectedUniques.map(card1 => {\r\n      return {\r\n        name: card1.name,\r\n        value: cardsSelected.filter(card2 => cardBeatTo(card1, card2)).length,\r\n        count: cardsSelected.filter(card2 => card1.name === card2.name).length,\r\n      }\r\n    });\r\n    const maxScore = Math.max.apply(null, scores.map(score => {return score.value} ));\r\n    const hasWinner = scores.filter(s => s.value == maxScore).length == 1 &&  scores.filter(s => s.value == maxScore)[0].count == 1 ;\r\n    const winnersStatus = hasWinner ? PLAYER_STATUS.ROUND_WINNER : PLAYER_STATUS.ROUND_TIED;\r\n\r\n    setData({\r\n      ...data, \r\n      state: SESSION_STATE.SHOW_RESULTS,\r\n      roundHasWinner: hasWinner,\r\n      playersSlots: data.playersSlots.map((player) => {\r\n        if(player.status !== PLAYER_STATUS.PLAYING){\r\n          return player;\r\n        }else{\r\n          const score = scores.find(s => s.name === player.cardSelected.name).value\r\n          console.log({cardsSelected: cardsSelected, scores: scores, maxScore: maxScore, hasWinner: hasWinner, winnersStatus: winnersStatus, player: player, score: score});\r\n          return {\r\n            ...player, \r\n            score: score,\r\n            status: score == maxScore ? winnersStatus : PLAYER_STATUS.ROUND_LOST,\r\n            victories: score == maxScore && hasWinner ? player.victories + 1 : player.victories,\r\n          };\r\n        }\r\n      })\r\n\r\n    });\r\n  \r\n  }\r\n\r\n  \r\n  const handleRestart = () => {\r\n    setData(emptySession);\r\n  }\r\n\r\n  const handleExitBoard = () => {\r\n    setData({\r\n      ...data, \r\n      state: SESSION_STATE.CONFIG,\r\n      current: null,\r\n      playersSlots: data.playersSlots.map(item => ({...item, cardSelected: undefined})) \r\n    });\r\n  }  \r\n  \r\n  const handleNextRound = () => {\r\n    setData({\r\n      ...data, \r\n      roundHasWinner: false,\r\n      state: SESSION_STATE.START,\r\n      current: 0,\r\n      playersSlots: data.playersSlots.map(player => {\r\n        return {\r\n          ...player, \r\n          //deselecciono la carta\r\n          cardSelected: undefined, \r\n          //reinicio el score\r\n          score: 0, \r\n          //si no hubo ganador y est jugador perdio, no juega la siguiente ronda\r\n          status: !data.roundHasWinner && player.status === PLAYER_STATUS.ROUND_LOST ? player.status : PLAYER_STATUS.PLAYING,\r\n        }\r\n      }\r\n\r\n      ) \r\n    });\r\n  }\r\n\r\n  const handlePlayerReady = () => {\r\n    //el usuario dice que esta listo, pero si es cpu tengo que elegir yo la carta::\r\n    //if(data.playersSlots[data.current].type === USER_TYPE.HUMAN){\r\n      setData({...data, state: SESSION_STATE.PLAYER_READY});\r\n    //}\r\n  }\r\n\r\n  //funcion extraida de developer.mozilla.org\r\n  //https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Math/random\r\n  const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  const autoShowCards = () => {\r\n    \r\n    Swal.fire({\r\n      title: 'RPSLS!',\r\n      html: 'All players have chosen.',\r\n      timer: 1500,\r\n      timerProgressBar: true,\r\n      willOpen: () => {\r\n        Swal.showLoading()\r\n      },\r\n      willClose: () => {\r\n        handleShowResults()\r\n      }\r\n    }).then((result) => {\r\n\r\n    })\r\n  } \r\n  return (\r\n    <>\r\n        {data.state == SESSION_STATE.CONFIG &&\r\n          <div className=\"row game-settings open fixed-top\">\r\n            <ul className=\"list-group col-12\">\r\n              {data.playersSlots.map((player, index) => {\r\n                return player.ok && <li className=\"list-group-item\" key={`playerOk-${index}`}><span>{player.name}</span></li>\r\n              })}\r\n              {data.playersSlots.map((player, index) => {\r\n                return !data.start && !player.ok && <li className=\"list-group-item\" key={`playerSlot-${index}`}>\r\n                  <PlayerConfig index={index} data={player} onRemovePlayer={handleRemovePlayer} onConfirmPlayer={handleConfirmPlayer}/>\r\n                  {!player.readonly && <><button onClick={() => handleRemovePlayer(index)}>Remove</button></>}\r\n                </li>\r\n              })}\r\n              <li className=\"list-group-item\">\r\n                {ok && <button className=\"btn btn-primary\" onClick={handleAddPlayerSlot}>Add Player</button>}\r\n                {ok && <button className=\"btn btn-primary\" onClick={handleStart}>Start</button>}\r\n                <button className=\"btn btn-primary\" onClick={handleRestart}>Restart Game</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        }\r\n\r\n        {data.state >= SESSION_STATE.START &&\r\n\r\n          <div className=\"container overflow-auto\">\r\n            <div className=\"row\">\r\n              <div className=\"col col-12\">\r\n                <button className=\"btn btn-danger m-1\" onClick={handleExitBoard}>Exit board</button>\r\n                {data.state == SESSION_STATE.END_ROUND && <button className=\"btn btn-info m-1\" onClick={handleShowCards}>Show Cards</button>}\r\n                {data.state == SESSION_STATE.SHOW_RESULTS && <button className=\"btn btn-success m-1\" onClick={handleNextRound}>Next Round</button>}\r\n              </div>   \r\n\r\n              {data.playersSlots.map((player, index) => player.ok && \r\n                <div className=\"col-6 col-md-4 col-lg-2\">\r\n                <Player key={`playerSession-${index}`} data={player} onReady={handlePlayerReady} turn={index == data.current} show={data.state >= SESSION_STATE.SHOW_CARDS} />\r\n                </div>\r\n              )}  \r\n            </div>\r\n          </div>\r\n        }\r\n        {data.state === SESSION_STATE.PLAYER_READY &&\r\n          <div className=\"container fixed-bottom\">\r\n            <div className=\"row\">\r\n              {cards.map(card => \r\n                <div className=\"col m-0 p-0\" key={`slot_${card.name}`}>\r\n                  <Slot card={card} onSelect={() => handleCardSelect(card)} player={data.playersSlots[data.current]}/>\r\n                </div> \r\n              )} \r\n            </div>\r\n          </div>\r\n        }\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Player } from './Player';\r\nimport { Session } from './Session';\r\n\r\nexport const Menu = (props) => {\r\n  return (\r\n    <>\r\n    <Session />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Menu } from './Menu';\r\n\r\nexport const Game = (props) => {\r\n  return (\r\n    <Menu />\r\n  )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { Game } from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'sweetalert2/dist/sweetalert2.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}