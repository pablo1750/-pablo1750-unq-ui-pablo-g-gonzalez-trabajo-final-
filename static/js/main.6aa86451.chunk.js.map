{"version":3,"sources":["components/Intro.jsx","components/Nav.jsx","components/Cards.jsx","components/Slot.jsx","components/Board.jsx","components/Choice.jsx","components/VictoriesCounter.jsx","components/Player.jsx","providers/PlayersContext.jsx","components/PlayerConfig.jsx","components/Players.jsx","components/Session.jsx","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Intro","props","className","to","src","alt","Nav","href","onClick","Swal","fire","title","html","coveredCard","name","beat","card","message","image","emptyCard","cards","Card","style","width","textAlign","backgroundColor","Slot","onSelect","disabled","player","type","USER_TYPE","CPU","HUMAN","ROUND_STATE","getRandomInt","min","max","Math","floor","random","Board","useState","current","state","roundHasWinner","data","setData","useContext","PlayersContext","players","setPlayers","useEffect","filter","status","PLAYER_STATUS","PLAYING","every","cardSelected","autoShowCards","handleCardSelect","selectCard","handleRandomCardSelect","length","handleCoveredCardSelect","handleShowResults","cardsSelected","map","scores","v","i","a","indexOf","card1","value","card2","some","b","cardBeatTo","count","maxScore","apply","score","hasWinner","s","winnersStatus","ROUND_WINNER","ROUND_TIED","roundResultPlayersUpdate","handleNextRound","nextRoundPlayersUpdate","handlePlayerReady","timer","timerProgressBar","willOpen","showLoading","willClose","then","result","minHeight","onExitBoard","setTimeout","index","onCoveredCardSelect","onRandomCardSelect","onReady","turn","show","Choice","VictoriesCounter","victories","height","viewBox","fill","xmlns","d","ROUND_LOST","playerEmpty","readonly","ok","undefined","PlayerIcon","Player","minWidth","substring","role","setter","item","j","find","nextPlayerIndex","React","createContext","PlayerConfig","error","setError","handleCpuClick","event","handleHumanClick","onSubmit","preventDefault","onConfirmPlayer","noValidate","class","for","id","placeholder","autoFocus","onChange","target","required","maxLength","color","onCancelPlayer","Players","onPlayersOkChange","slots","push","playersSlots","setPlayersSlots","handleRemovePlayerSlot","slot","handleConfirmPlayer","playerSlot","addPlayer","icon","confirmButtonText","cancelButtonText","showCancelButton","focusCancel","focusConfirm","isConfirmed","handleRemovePlayer","SESSION_STATE","Session","playersOk","Provider","Game","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aa86451.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Intro = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"container d-flex justify-content-center fixed-top mt-5\">\r\n        <div className=\"intro-spinner\" >\r\n          <Link to=\"/game\" className=\"btn btn-primary btn-lg intro-spinner start\">Start</Link>\r\n          <div className=\"intro-spinner-hand scissors\">\r\n            <img src=\"assets/intro_scissors.png\" alt=\"scissors-hand\"/>\r\n          </div>\r\n          <div className=\"intro-spinner-hand lizard\">\r\n            <img src=\"assets/intro_lizard.png\" alt=\"lizard-hand\"/>\r\n          </div>\r\n          <div className=\"intro-spinner-hand spock\">\r\n            <img src=\"assets/intro_spock.png\" alt=\"spock-hand\"/>\r\n          </div>\r\n          <div className=\"intro-spinner-hand paper\">\r\n            <img src=\"assets/intro_paper.png\" alt=\"paper-hand\"/>\r\n          </div>\r\n          <div className=\"intro-spinner-hand rock\">\r\n            <img src=\"assets/intro_rock.png\" alt=\"rock-hand\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const Nav = () => {\r\n\r\n  \r\n  const handleRulesClick = () => {\r\n\r\n    Swal.fire({\r\n      title: 'RPSLS Game Rules',\r\n      html: \r\n      '<div style=\"text-align:left\">' +\r\n      'Scissors cuts Paper<br/>' + \r\n      'Paper covers Rock<br/>' + \r\n      'Rock crushes Lizard<br/>' + \r\n      'Lizard poisons Spock<br/>' + \r\n      'Spock smashes Scissors<br/>' + \r\n      'Scissors decapitates Lizard<br/>' + \r\n      'Lizard eats Paper<br/>' + \r\n      'Paper disproves Spock<br/>' + \r\n      'Spock vaporizes Rock<br/>' + \r\n      '(and as it always has) Rock crushes Scissors' +\r\n      '</div'\r\n      ,\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-header\">\r\n          <a className=\"navbar-brand\" href=\"/\">RPSLS Game</a>\r\n        </div>\r\n        <ul className=\"nav navbar-nav navbar-right\">\r\n          <li>\r\n            <div className=\"btn-nav\">\r\n              <button className=\"btn btn-info btn-sm m-1\" onClick={handleRulesClick}>Rules</button>\r\n            </div>\r\n          </li>\r\n        </ul>  \r\n      </div>\r\n\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport const coveredCard =   {\r\n  name: \"Covered\", \r\n  beat: [\r\n    { card: \"\", message: \"\" },\r\n    { card: \"\", message: \"\" },\r\n  ],\r\n  image: \"assets/card_covered.png\"\r\n};\r\n\r\nexport const emptyCard =   {\r\n  name: \"Empty\", \r\n  beat: [\r\n    { card: \"\", message: \"\" },\r\n    { card: \"\", message: \"\" },\r\n  ],\r\n  image: \"assets/card_empty.png\"\r\n};\r\n\r\nexport const cards = [\r\n  {\r\n    name: \"Rock\", \r\n    beat: [\r\n      { card: \"Lizard\", message: \"Rock crushes Lizard\" },\r\n      { card: \"Scissors\", message: \"Rock crushes Scissors\" },\r\n    ],\r\n    image: \"assets/card_rock.png\"\r\n  },\r\n  {\r\n    name: \"Paper\", \r\n    beat: [\r\n      { card: \"Rock\", message: \"Paper covers Rock\" },\r\n      { card: \"Spock\", message: \"Paper disproves Spock\" },\r\n    ],\r\n    image: \"assets/card_paper.png\"\r\n  },\r\n  {\r\n    name: \"Scissors\", \r\n    beat: [\r\n      { card: \"Paper\", message: \"Scissors cuts Paper\" },\r\n      { card: \"Lizard\", message: \"Scissors decapitates Lizard\" },\r\n    ],\r\n    image: \"assets/card_scissors.png\"\r\n  },\r\n  {\r\n    name: \"Lizard\", \r\n    beat: [\r\n      { card: \"Spock\", message: \"Lizard poisons Spock\" },\r\n      { card: \"Paper\", message: \"Lizard eats Paper\" },\r\n    ],\r\n    image: \"assets/card_lizard.png\"\r\n  },\r\n  {\r\n    name: \"Spock\", \r\n    beat: [\r\n      { card: \"Scissors\", message: \"Spock smashes Scissors\" },\r\n      { card: \"Rock\", message: \"Spock vaporizes Rock\" },\r\n    ],\r\n    image: \"assets/card_spock.png\"\r\n  },\r\n];\r\n\r\nexport const cardBeatTo = (card1, card2) => card1.beat.some(b => b.card === card2.name);\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"card\" style={{width: \"100%\", textAlign: \"center\", backgroundColor: \"rgba(255, 255, 255, 0.192)\"}} >\r\n        <img src={props.card.image} style={{width: props.width ? props.width : \"100%\"}} className=\"rounded mx-auto d-block p-1 m-0\" alt=\"card\"/>       \r\n      </div>\r\n   </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Card, coveredCard } from './Cards';\r\nimport { USER_TYPE } from './Player';\r\n\r\nexport const Slot = (props) => {\r\n\r\n  const handleSelectClick = () => {\r\n    props.onSelect(props.card);\r\n  }\r\n\r\n  return (\r\n      <button className=\"btn m-0 p-0\" onClick={handleSelectClick} disabled={props.player.type === USER_TYPE.CPU}>\r\n        {props.player.type === USER_TYPE.CPU &&\r\n          <Card card={coveredCard} />\r\n        }\r\n        {props.player.type === USER_TYPE.HUMAN &&\r\n          <Card card={props.card} />\r\n        }\r\n      </button>\r\n  )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PlayersContext, { nextRoundPlayersUpdate, roundResultPlayersUpdate, selectCard } from '../providers/PlayersContext';\r\nimport { cardBeatTo, cards, coveredCard } from './Cards';\r\nimport { Player, PLAYER_STATUS } from './Player';\r\nimport { Slot } from './Slot';\r\n\r\nconst ROUND_STATE = {\r\n  START: 0,\r\n  PLAYER_READY: 1,\r\n  END_ROUND: 2,\r\n  SHOW_CARDS: 3,\r\n  SHOW_RESULTS: 4\r\n}\r\n\r\nconst emptyBoard = () => { return {\r\n  current: 0,\r\n  state: ROUND_STATE.START,\r\n  roundHasWinner: false,\r\n}}\r\n\r\n//funcion extraida de developer.mozilla.org\r\n//https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Math/random\r\nexport const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min)) + min;\r\n\r\n\r\nexport const Board = (props) => {\r\n  \r\n  const [data, setData] = useState({...emptyBoard()} );\r\n  const [players, setPlayers] = useContext(PlayersContext);\r\n\r\n  useEffect(() => {\r\n\r\n    //update end of round (si todos los jugadores en estado PLAYING tienen carta seleccionada)\r\n    if(data.state === ROUND_STATE.START && players.filter(player => player.status === PLAYER_STATUS.PLAYING).every(player => !!player.cardSelected)){\r\n      setData({\r\n        ...data, \r\n        state : ROUND_STATE.END_ROUND,\r\n      });\r\n      autoShowCards();\r\n    }\r\n\r\n  }, [data.current] );\r\n\r\n  const nextTurn = () => {\r\n    return data.current + 1;\r\n  }\r\n  \r\n  const handleCardSelect = (card) => {\r\n    selectCard(setPlayers, data.current, card);\r\n    setData({\r\n      ...data, \r\n      current: nextTurn(),\r\n      state: ROUND_STATE.START\r\n    });\r\n  }\r\n  \r\n  const handleRandomCardSelect = () => {\r\n    handleCardSelect(cards[getRandomInt(0, cards.length)])\r\n  }\r\n\r\n  const handleCoveredCardSelect = () => {\r\n    handleCardSelect(coveredCard);\r\n  }\r\n\r\n  const handleShowCards = () => {\r\n    setData({...data, state: ROUND_STATE.SHOW_CARDS});\r\n    setTimeout(()=>{handleShowResults()}, 1000)\r\n  }\r\n\r\n  const handleShowResults = () => {\r\n    const cardsSelected = players\r\n      .filter(player => player.status === PLAYER_STATUS.PLAYING)\r\n      .map(player => player.cardSelected);\r\n\r\n      //este filtro es para eliminar duplicados\r\n    const cardsSelectedUniques = cardsSelected.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n    const scores = cardsSelectedUniques.map(card1 => {\r\n      return {\r\n        name: card1.name,\r\n        value: cardsSelected.filter(card2 => cardBeatTo(card1, card2)).length,\r\n        count: cardsSelected.filter(card2 => card1.name === card2.name).length,\r\n      }\r\n    });\r\n    const maxScore = Math.max.apply(null, scores.map(score => {return score.value} ));\r\n    const hasWinner = scores.filter(s => s.value === maxScore).length === 1 &&  scores.filter(s => s.value === maxScore)[0].count === 1 ;\r\n    const winnersStatus = hasWinner ? PLAYER_STATUS.ROUND_WINNER : PLAYER_STATUS.ROUND_TIED;\r\n    setData({\r\n      ...data, \r\n      state: ROUND_STATE.SHOW_RESULTS,\r\n      roundHasWinner: hasWinner,\r\n      current: null,\r\n    });\r\n\r\n    roundResultPlayersUpdate(setPlayers, scores, maxScore, hasWinner, winnersStatus);\r\n\r\n  }\r\n\r\n \r\n  const handleNextRound = () => {\r\n    setData({\r\n      ...data, \r\n      roundHasWinner: false,\r\n      state: ROUND_STATE.START,\r\n      current: 0,\r\n    });\r\n    nextRoundPlayersUpdate(setPlayers, data.roundHasWinner);\r\n  }\r\n\r\n  const handlePlayerReady = () => {\r\n    setData({...data, state: ROUND_STATE.PLAYER_READY});\r\n  }\r\n\r\n  const autoShowCards = () => {\r\n    Swal.fire({\r\n      title: 'RPSLS!',\r\n      html: 'All players have chosen.',\r\n      timer: 500,\r\n      timerProgressBar: true,\r\n      willOpen: () => {\r\n        Swal.showLoading()\r\n      },\r\n      willClose: () => {\r\n        handleShowResults()\r\n      }\r\n    }).then((result) => {\r\n    })\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{minHeight: \"55px\"}}>\r\n        <div className=\"col col-12 mh-100\">\r\n          <button className=\"btn btn-danger m-1\" onClick={() => {props.onExitBoard(data.players)}}>Exit</button>\r\n          {data.state === ROUND_STATE.END_ROUND && <button className=\"btn btn-info m-1\" onClick={handleShowCards}>Show Cards</button>}\r\n          {data.state === ROUND_STATE.SHOW_RESULTS && data.roundHasWinner && <button className=\"btn btn-success m-1\" onClick={handleNextRound}>Next Round</button>}\r\n          {data.state === ROUND_STATE.SHOW_RESULTS && !data.roundHasWinner && <button className=\"btn btn-warning m-1\" onClick={handleNextRound}>Tie-breaker</button>}\r\n        </div>   \r\n      </div>\r\n      <div className=\"row d-flex justify-content-center\">\r\n        {players.map((player, index) => \r\n          <div key={`player-${player.index}`} className=\"col-6 col-md-4 col-lg-2 mb-3\">\r\n            <Player data={player} onCoveredCardSelect={handleCoveredCardSelect} onRandomCardSelect={handleRandomCardSelect} onReady={handlePlayerReady} turn={index === data.current} show={data.state >= ROUND_STATE.SHOW_CARDS} />\r\n          </div>\r\n        )}  \r\n      </div>\r\n      <div className={`container fixed-bottom overflow-auto ${data.state === ROUND_STATE.PLAYER_READY && \"w3-animate-bottom\"}`}>\r\n        {data.state === ROUND_STATE.PLAYER_READY &&\r\n          <div className=\"row\">\r\n            {cards.map(card => \r\n              <div className=\"col m-0 p-0\" key={`card_slot-${card.name}`}>\r\n                <Slot card={card} onSelect={() => handleCardSelect(card)} player={players[data.current]}/>\r\n              </div> \r\n            )} \r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Card, coveredCard, emptyCard } from './Cards';\r\n\r\nexport const Choice = (props) => {\r\n  return (\r\n    <div style={{width: \"100%\"}}>\r\n    {props.card && !props.show &&\r\n      <Card card={coveredCard} width=\"100px\"/>\r\n    }\r\n    {props.card && props.show &&\r\n      <Card card={props.card} width=\"100px\"/>\r\n    }\r\n    {!props.card && \r\n      <Card card={emptyCard} width=\"100px\"/>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport const VictoriesCounter = (props) => {\r\n  return (\r\n    <>\r\n      {props.victories > 0 && \r\n        <span className=\"badge badge-warning badge-pill pb-1\" title=\"victories\">\r\n          {props.victories}\r\n          <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trophy ml-1\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M2.5.5A.5.5 0 0 1 3 0h10a.5.5 0 0 1 .5.5c0 .538-.012 1.05-.034 1.536a3 3 0 1 1-1.133 5.89c-.79 1.865-1.878 2.777-2.833 3.011v2.173l1.425.356c.194.048.377.135.537.255L13.3 15.1a.5.5 0 0 1-.3.9H3a.5.5 0 0 1-.3-.9l1.838-1.379c.16-.12.343-.207.537-.255L6.5 13.11v-2.173c-.955-.234-2.043-1.146-2.833-3.012a3 3 0 1 1-1.132-5.89A33.076 33.076 0 0 1 2.5.5zm.099 2.54a2 2 0 0 0 .72 3.935c-.333-1.05-.588-2.346-.72-3.935zm10.083 3.935a2 2 0 0 0 .72-3.935c-.133 1.59-.388 2.885-.72 3.935zM3.504 1c.007.517.026 1.006.056 1.469.13 2.028.457 3.546.87 4.667C5.294 9.48 6.484 10 7 10a.5.5 0 0 1 .5.5v2.61a1 1 0 0 1-.757.97l-1.426.356a.5.5 0 0 0-.179.085L4.5 15h7l-.638-.479a.501.501 0 0 0-.18-.085l-1.425-.356a1 1 0 0 1-.757-.97V10.5A.5.5 0 0 1 9 10c.516 0 1.706-.52 2.57-2.864.413-1.12.74-2.64.87-4.667.03-.463.049-.952.056-1.469H3.504z\"></path>\r\n          </svg>\r\n        </span>\r\n      }\r\n    </>\r\n  )\r\n}","import React, { useEffect } from 'react';\r\nimport { getRandomInt } from './Board';\r\nimport { Choice } from './Choice';\r\nimport { VictoriesCounter } from './VictoriesCounter';\r\n\r\nexport const USER_TYPE = {\r\n  CPU: 0,\r\n  HUMAN: 1\r\n}\r\n\r\nexport const PLAYER_STATUS = {\r\n  PLAYING: 0,\r\n  ROUND_WINNER: 1,\r\n  ROUND_LOST: 2,\r\n  ROUND_TIED: 3\r\n}\r\n\r\nexport const playerEmpty = (readonly) => {\r\n  return {\r\n    ok: false,\r\n    index: 0,\r\n    name : \"\",\r\n    victories : 0,\r\n    score : 0,\r\n    readonly : readonly,\r\n    type: USER_TYPE.HUMAN,\r\n    turn: false,\r\n    cardSelected: undefined,\r\n    status: PLAYER_STATUS.PLAYING,\r\n  }\r\n}\r\n\r\nexport const PlayerIcon = ({type}) => {\r\n  return (\r\n    <>\r\n      {type === USER_TYPE.HUMAN && \r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"></path>\r\n        </svg>        \r\n      }\r\n      {type === USER_TYPE.CPU && \r\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-cpu\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M5 0a.5.5 0 0 1 .5.5V2h1V.5a.5.5 0 0 1 1 0V2h1V.5a.5.5 0 0 1 1 0V2h1V.5a.5.5 0 0 1 1 0V2A2.5 2.5 0 0 1 14 4.5h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14a2.5 2.5 0 0 1-2.5 2.5v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14A2.5 2.5 0 0 1 2 11.5H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2A2.5 2.5 0 0 1 4.5 2V.5A.5.5 0 0 1 5 0zm-.5 3A1.5 1.5 0 0 0 3 4.5v7A1.5 1.5 0 0 0 4.5 13h7a1.5 1.5 0 0 0 1.5-1.5v-7A1.5 1.5 0 0 0 11.5 3h-7zM5 6.5A1.5 1.5 0 0 1 6.5 5h3A1.5 1.5 0 0 1 11 6.5v3A1.5 1.5 0 0 1 9.5 11h-3A1.5 1.5 0 0 1 5 9.5v-3zM6.5 6a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\"></path>\r\n        </svg>    \r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport const Player = ({data, onReady, onRandomCardSelect, onCoveredCardSelect, turn, show}) => {\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    //si es el turno, esta jugando y es cpu, \r\n    //se pone listo y espera entre 600 y 1499 ms para hacer una eleccion de carta aleatoria \r\n    if(turn && data.status === PLAYER_STATUS.PLAYING && data.type === USER_TYPE.CPU){  \r\n      onReady(true);\r\n      setTimeout(() => {\r\n        onRandomCardSelect();\r\n      }, getRandomInt(600, 1500));\r\n    }\r\n\r\n    //si perdio la ronda y se esta desempatando, pone una carta cubierta\r\n    if(turn && data.status === PLAYER_STATUS.ROUND_LOST){\r\n      onCoveredCardSelect();\r\n    }\r\n\r\n  }, [turn])\r\n\r\n\r\n  return (\r\n    <div className={`card player text-white ${turn ? \"bg-primary\" : \"bg-secondary\"} ${data.status === PLAYER_STATUS.ROUND_WINNER && \"blink bg-warning\"}`} style={{minWidth: \"160px\"}}>\r\n      \r\n      <div className=\"card-header  d-flex justify-content-between align-items-center p-2\" style={{minHeight: \"38px\"}}>\r\n        <PlayerIcon type={data.type} />\r\n        <VictoriesCounter victories={data.victories}/>\r\n      </div>\r\n\r\n      <div className=\"card-body p-2\">    \r\n\r\n        <div className=\"card-title\">\r\n          {data.name.substring(0,6)}{data.name.length>6 && \"…\"}\r\n        </div>\r\n\r\n        <div className=\"card-text text-center mb-3\">\r\n          <Choice card={data.cardSelected} show={show} />\r\n        </div>\r\n\r\n        <div style={{minHeight: \"40px\"}}>\r\n          {data.type === USER_TYPE.HUMAN && turn &&\r\n            <button className=\"btn btn-success\" onClick={onReady} disabled={!turn}>\r\n              Choice\r\n            </button>\r\n          }\r\n          {data.type === USER_TYPE.CPU && turn &&\r\n            <button className=\"btn btn-success\" disabled>\r\n              <div className=\"spinner-border  spinner-border-sm text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div> Choosing\r\n            </button>\r\n          }\r\n          {data.status === PLAYER_STATUS.ROUND_WINNER &&\r\n            <div className=\"alert alert-success m-1 p-1\">Winner ({data.score})</div>\r\n          }\r\n          {data.status === PLAYER_STATUS.ROUND_LOST &&\r\n            <div className=\"alert alert-danger m-1 p-1\">Loser ({data.score})</div>\r\n          }\r\n          {data.status === PLAYER_STATUS.ROUND_TIED &&\r\n            <div className=\"alert alert-success m-1 p-1\">Tied ({data.score})</div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { PLAYER_STATUS } from \"../components/Player\";\r\n\r\n// (A)\r\n\r\nconst removePlayer = (setter, index) => setter((players) => (players.filter(item => item.index !== index)) ) ;\r\nconst addPlayer = (setter, player) => setter((players) => ([...players, player]));\r\nconst clearPlayers = (setter) => setter([]);\r\nconst exitPlayers = (setter) => ( setter( (players) => (players.map(player => ({\r\n    ...player, \r\n    //deselecciono la carta\r\n    cardSelected: undefined, \r\n    //reinicio el score\r\n    score: 0, \r\n    //si no hubo ganador y est jugador perdio, no juega la siguiente ronda\r\n    status: PLAYER_STATUS.PLAYING,\r\n  })))));\r\n\r\nconst selectCard = (setter, index, card) => setter(players =>\r\n  players.map((item, j) => {\r\n    return (j === index) ? {...item, cardSelected: card} : item;\r\n  })\r\n)\r\n\r\nconst roundResultPlayersUpdate = (setter, scores, maxScore, hasWinner, winnersStatus ) => setter(players => \r\n  players.map((player) => {\r\n    if(player.status !== PLAYER_STATUS.PLAYING){\r\n      return player;\r\n    }else{\r\n      const score = scores.find(s => s.name === player.cardSelected.name).value\r\n      return {\r\n        ...player, \r\n        score: score,\r\n        status: score === maxScore ? winnersStatus : PLAYER_STATUS.ROUND_LOST,\r\n        victories: score === maxScore && hasWinner ? player.victories + 1 : player.victories,\r\n      };\r\n    }\r\n  })\r\n)\r\n\r\nconst nextRoundPlayersUpdate = (setter, roundHasWinner) => setter(players =>\r\n  players.map(player => {\r\n    return {\r\n      ...player, \r\n      //deselecciono la carta\r\n      cardSelected: undefined, \r\n      //reinicio el score\r\n      score: 0, \r\n      //si no hubo ganador y est jugador perdio, no juega la siguiente ronda\r\n      status: !roundHasWinner && player.status === PLAYER_STATUS.ROUND_LOST ? player.status : PLAYER_STATUS.PLAYING,\r\n    }\r\n  })\r\n)\r\n\r\nconst nextPlayerIndex = (players) => (Math.max.apply(null, players.map(player => {return player.index} )) | 0) + 1;\r\n// (B)\r\nconst PlayersContext = React.createContext(null); \r\n\r\n// (C)\r\nexport { addPlayer, removePlayer, clearPlayers, exitPlayers, selectCard, roundResultPlayersUpdate, nextRoundPlayersUpdate, nextPlayerIndex};\r\nexport default PlayersContext;","import React, { useState } from 'react';\r\nimport { USER_TYPE } from './Player';\r\n\r\nexport const PlayerConfig = (props) => {\r\n\r\n  const [data, setData ] = useState(props.data)\r\n  const [error, setError ] = useState(\"\")\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(data.name === \"\"){\r\n      setError(\"Name is required.\");\r\n      return;\r\n    }\r\n    props.onConfirmPlayer({...data, ok: true});\r\n  }\r\n  \r\n  const handleNameChange = (event) => {\r\n    setError(\"\");\r\n    setData({...data, name: event.target.value});\r\n  }\r\n\r\n  const handleTypeToggleClick = (event) => {\r\n\r\n    if(data.type === USER_TYPE.CPU){\r\n      handleHumanClick();\r\n    }\r\n    if(data.type === USER_TYPE.HUMAN){\r\n      handleCpuClick();\r\n    }\r\n\r\n  }\r\n\r\n  const handleCpuClick = (event) => {\r\n    setError(\"\");\r\n    setData({...data, name: \"CPU\", type: USER_TYPE.CPU});\r\n  }\r\n  \r\n  const handleHumanClick = (event) => {\r\n    setError(\"\");\r\n    setData({...data, name: \"\", type: USER_TYPE.HUMAN});\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <form className=\"was-validated h-100\" onSubmit={handleSubmit} noValidate  style={{textAlign: \"left\"}}>\r\n        <div class=\"form-row\">\r\n          <div class=\"col-md-8\">\r\n              <label for={`player${data.index}-name`}>Player {data.index}</label>\r\n              <input id={`player${data.index}-name`} className=\"form-control form-control-sm\" placeholder=\"Name\" value={data.name} autoFocus={props.autoFocus} disabled={data.type === USER_TYPE.CPU} onChange={handleNameChange} required maxLength={30}/>\r\n              {error &&  \r\n                <div className=\"invalid-feedback\"> \r\n                    {error}\r\n                </div>\r\n              }\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <label style={{color:\"transparent\"}}>Type</label>\r\n            <div class=\"custom-control custom-switch\">\r\n              <input id={`player${data.index}-type`} type=\"checkbox\" class=\"custom-control-input\" onClick={handleTypeToggleClick}/>\r\n              <label class=\"custom-control-label\" for={`player${data.index}-type`}>CPU</label>  \r\n            </div>    \r\n          </div>\r\n        </div>\r\n        <div class=\"form-row\">\r\n          <div class=\"col-md-12 mt-3\">\r\n              {!data.readonly && <button className=\"btn btn-outline-danger m-1\" onClick={() => props.onCancelPlayer()}>Cancel</button>}\r\n              <button type=\"submit\" className=\"btn btn-success m-1\">Confirm</button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </form>\r\n    </>\r\n  )\r\n\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PlayersContext, { addPlayer, nextPlayerIndex, removePlayer } from '../providers/PlayersContext';\r\nimport { playerEmpty, PlayerIcon } from './Player';\r\nimport { PlayerConfig } from './PlayerConfig';\r\nimport { VictoriesCounter } from './VictoriesCounter';\r\n\r\n\r\nexport const Players = ({onPlayersOkChange}) => {\r\n  \r\n  const [players, setPlayers] = useContext(PlayersContext);\r\n  const [playersSlots, setPlayersSlots] = useState(()=>{\r\n    let slots = [];\r\n    for(var i = 1; i < 3 - players.length; i++ ){\r\n      slots.push( {...playerEmpty(false), index: i} );\r\n    }\r\n    return slots;\r\n  \r\n  });\r\n\r\n  useEffect(() => {\r\n    onPlayersOkChange( playersSlots.length === 0);\r\n  }, [playersSlots])\r\n\r\n  const handleRemovePlayer = (player) => {\r\n    Swal.fire({\r\n      icon: 'info',\r\n      html: `Are you sure to eliminate ${player.name}?`,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'No',\r\n      showCancelButton: true,\r\n      focusCancel: true,\r\n      focusConfirm: false,\r\n      timer: 4000,\r\n      timerProgressBar: true,\r\n    }).then((result) => {\r\n      if(result.isConfirmed){\r\n        removePlayer(setPlayers, player.index);\r\n      }\r\n    })\r\n  }\r\n\r\n   const handleRemovePlayerSlot = (slot) => {\r\n    setPlayersSlots(playersSlots.filter(item => item !== slot));\r\n  }\r\n\r\n  const handleConfirmPlayer = (playerSlot, player) =>{\r\n    handleRemovePlayerSlot(playerSlot);\r\n    addPlayer(setPlayers, player);\r\n  };\r\n\r\n  const handleAddPlayerSlot = () => {\r\n    setPlayersSlots(playersSlots => [...playersSlots, {...playerEmpty(false), index: nextPlayerIndex(players)}] );\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col col-2 d-none d-sm-none d-md-block\"> </div>\r\n        <div className=\"col col-12 col-md-8 \"> \r\n          <ul className=\"list-group\">\r\n\r\n            <li className=\"list-group-item align-items-center\">\r\n              Players\r\n            </li>\r\n\r\n            {players.map(player => \r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={`playerOk-${player.index}`}>\r\n                <span>\r\n                  <span className=\"m-1\"><PlayerIcon type={player.type}/></span>\r\n                  {player.name}\r\n                </span>\r\n                <span>\r\n                  <VictoriesCounter victories={player.victories}/>\r\n                  <button className=\"btn btn-outline-primary btn-sm ml-2\" onClick={() => {handleRemovePlayer(player)}}>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                      <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                    </svg>\r\n                  </button>\r\n                </span>\r\n              </li>\r\n            )}\r\n\r\n            {playersSlots.map((playerSlot, index)=> \r\n              <li className=\"list-group-item\" key={playerSlot.index}>\r\n                <PlayerConfig data={playerSlot} autoFocus={index===0} onConfirmPlayer={(player) => {handleConfirmPlayer(playerSlot, player)}} onCancelPlayer={() => handleRemovePlayerSlot(playerSlot)}/>\r\n              </li>\r\n            )}\r\n\r\n            {playersSlots.length === 0 && \r\n              <li className=\"list-group-item\">\r\n                <button className=\"btn btn-primary\" onClick={handleAddPlayerSlot}>Add Player</button>\r\n              </li>\r\n            }\r\n          </ul>  \r\n        </div>\r\n        <div className=\"col col-2 d-none d-sm-none d-md-block\"> </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PlayersContext, {clearPlayers, exitPlayers} from '../providers/PlayersContext';\r\nimport { Board } from './Board';\r\nimport { Players } from './Players';\r\n\r\n\r\nexport const SESSION_STATE = {\r\n  CONFIG: 0,\r\n  START: 1,\r\n}\r\n\r\nexport const Session = (props) => {\r\n\r\n  const [data, setData] = useState({\r\n    state: SESSION_STATE.CONFIG,\r\n    playersOk: true,\r\n  });\r\n  \r\n  const [players, setPlayers] = useState([]);\r\n\r\n  const handleExitBoard = (players) => {\r\n    setData({\r\n      ...data, \r\n      state: SESSION_STATE.CONFIG,\r\n    });\r\n    exitPlayers(setPlayers);\r\n  }  \r\n\r\n  const handleRestartClick = () => {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      html: `Are you sure to restart?`,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'No',\r\n      showCancelButton: true,\r\n      focusCancel: true,\r\n      focusConfirm: false,\r\n      timer: 4000,\r\n      timerProgressBar: true,\r\n    }).then((result) => {\r\n      if(result.isConfirmed){\r\n        clearPlayers(setPlayers);  \r\n      } \r\n    })\r\n  }\r\n\r\n  const handleStartClick = () => {\r\n    setData({...data, state: SESSION_STATE.START});\r\n  }\r\n  \r\n  const handlePlayersOkChange = (playersOk) => {\r\n    setData({...data, playersOk: playersOk})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PlayersContext.Provider value={[players, setPlayers]}>\r\n        <div className={`container pt-2 overflow-auto ${data.state === SESSION_STATE.CONFIG && \"w3-animate-top\"}`}>\r\n          {data.state === SESSION_STATE.CONFIG &&\r\n            <>\r\n              <div className=\"row\" style={{minHeight: \"55px\"}}>\r\n                <div className=\"col col-12 mh-100\">\r\n                  {players.length > 1 && <button className=\"btn btn-danger m-1\" onClick={handleRestartClick}>Restart</button>}\r\n                  {players.length > 1 && data.playersOk && <button className=\"btn btn-success m-1\" onClick={handleStartClick}>Play</button>}\r\n                </div>   \r\n              </div>\r\n              <Players onPlayersOkChange={handlePlayersOkChange}/>\r\n            </>\r\n          }\r\n        </div>\r\n\r\n\r\n        <div className={`container pt-2 overflow-auto ${data.state >= SESSION_STATE.START && \"w3-animate-top\"}`}>\r\n          {data.state >= SESSION_STATE.START &&\r\n            <Board onExitBoard={handleExitBoard}/>\r\n          }\r\n        </div>\r\n      </PlayersContext.Provider>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { Intro } from './Intro';\r\nimport { Nav } from './Nav';\r\nimport { Session } from './Session';\r\n\r\nexport const Game = (props) => {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/game\" component={Session}/>\r\n          <Route path=\"*\" component={Intro}/>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n","import './App.css';\r\nimport { Game } from './components/Game';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Game/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.scss';\r\nimport 'sweetalert2/dist/sweetalert2.min.css'\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}