{"version":3,"sources":["components/Nav.jsx","logo.svg","components/Cards.jsx","components/Choice.jsx","components/Player.jsx","components/Slot.jsx","components/Board.jsx","components/PlayerConfig.jsx","components/Session.jsx","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","className","href","coveredCard","name","beat","card","message","image","emptyCard","cards","Card","style","width","textAlign","backgroundColor","src","alt","Choice","show","USER_TYPE","PLAYER_STATUS","playerEmpty","readonly","ok","index","victories","score","type","turn","choices","cardSelected","undefined","status","Player","useState","setChoising","useEffect","data","minWidth","minHeight","height","viewBox","class","fill","xmlns","fill-rule","d","title","substring","length","onClick","onReady","disabled","readyCountDown","role","Slot","onSelect","player","Board","players","current","state","SESSION_STATE","START","roundHasWinner","setData","filter","every","END_ROUND","autoShowCards","handleCardSelect","handlePlayerReady","setTimeout","getRandomInt","map","item","j","console","log","handleShowResults","cardsSelected","scores","v","i","a","indexOf","card1","value","card2","some","b","cardBeatTo","count","maxScore","Math","max","apply","hasWinner","s","winnersStatus","SHOW_RESULTS","find","handleNextRound","PLAYER_READY","min","floor","random","Swal","fire","html","timer","timerProgressBar","willOpen","showLoading","willClose","then","result","onExitBoard","SHOW_CARDS","PlayerConfig","error","setError","onSubmit","event","preventDefault","onConfirmPlayer","noValidate","placeholder","autoFocus","onChange","target","required","maxLength","onCancelPlayer","CONFIG","emptySession","playersSlots","start","playersCounter","Session","setOk","icon","confirmButtonText","cancelButtonText","showCancelButton","focusCancel","focusConfirm","isConfirmed","handleRemovePlayer","playerSlot","slot","handleConfirmPlayer","Game","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15bb78c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Nav = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"#\">RPSLS Game</a>\r\n    </nav>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\n\r\nimport React from 'react';\r\n\r\nexport const coveredCard =   {\r\n  name: \"Covered\", \r\n  beat: [\r\n    { card: \"\", message: \"\" },\r\n    { card: \"\", message: \"\" },\r\n  ],\r\n  image: \"assets/card_covered.png\"\r\n};\r\n\r\nexport const emptyCard =   {\r\n  name: \"Empty\", \r\n  beat: [\r\n    { card: \"\", message: \"\" },\r\n    { card: \"\", message: \"\" },\r\n  ],\r\n  image: \"assets/card_empty.png\"\r\n};\r\n\r\nexport const cards = [\r\n  {\r\n    name: \"Rock\", \r\n    beat: [\r\n      { card: \"Lizard\", message: \"Rock crushes Lizard\" },\r\n      { card: \"Scissors\", message: \"Rock crushes Scissors\" },\r\n    ],\r\n    image: \"assets/card_rock.png\"\r\n  },\r\n  {\r\n    name: \"Paper\", \r\n    beat: [\r\n      { card: \"Rock\", message: \"Paper covers Rock\" },\r\n      { card: \"Spock\", message: \"Paper disproves Spock\" },\r\n    ],\r\n    image: \"assets/card_paper.png\"\r\n  },\r\n  {\r\n    name: \"Scissors\", \r\n    beat: [\r\n      { card: \"Paper\", message: \"Scissors cuts Paper\" },\r\n      { card: \"Lizard\", message: \"Scissors decapitates Lizard\" },\r\n    ],\r\n    image: \"assets/card_scissors.png\"\r\n  },\r\n  {\r\n    name: \"Lizard\", \r\n    beat: [\r\n      { card: \"Spock\", message: \"Lizard poisons Spock\" },\r\n      { card: \"Paper\", message: \"Lizard eats Paper\" },\r\n    ],\r\n    image: \"assets/card_lizard.png\"\r\n  },\r\n  {\r\n    name: \"Spock\", \r\n    beat: [\r\n      { card: \"Scissors\", message: \"Spock smashes Scissors\" },\r\n      { card: \"Rock\", message: \"Spock vaporizes Rock\" },\r\n    ],\r\n    image: \"assets/card_spock.png\"\r\n  },\r\n];\r\n\r\nexport const cardBeatTo = (card1, card2) => card1.beat.some(b => b.card == card2.name);\r\n\r\nexport const whoWins = (card1, card2) => {\r\n  if(card1.beat.any(card => card.name == card2.name)){\r\n    return card1;\r\n  }\r\n  if(card2.beat.any(card => card.name == card1.name)){\r\n    return card2;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"card\" style={{width: \"100%\", textAlign: \"center\", backgroundColor: \"rgba(255, 255, 255, 0.192)\"}} >\r\n        <img src={props.card.image} style={{width: props.width ? props.width : \"100%\"}} className=\"rounded mx-auto d-block p-1 m-0\" alt=\"card-image\"/>       \r\n      </div>\r\n   </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Card, coveredCard, emptyCard } from './Cards';\r\n\r\nexport const Choice = (props) => {\r\n  return (\r\n    <div style={{width: \"100%\"}}>\r\n    {props.card && !props.show &&\r\n      <Card card={coveredCard} width=\"100px\"/>\r\n    }\r\n    {props.card && props.show &&\r\n      <Card card={props.card} width=\"100px\"/>\r\n    }\r\n    {!props.card && \r\n      <Card card={emptyCard} width=\"100px\"/>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Choice } from './Choice';\r\n\r\nexport const USER_TYPE = {\r\n  CPU: 0,\r\n  HUMAN: 1\r\n}\r\n\r\nexport const PLAYER_STATUS = {\r\n  PLAYING: 0,\r\n  ROUND_WINNER: 1,\r\n  ROUND_LOST: 2,\r\n  ROUND_TIED: 3\r\n}\r\n\r\nexport const playerEmpty = (readonly) => {\r\n  return {\r\n    ok: false,\r\n    index: 0,\r\n    name : \"\",\r\n    victories : 0,\r\n    score : 0,\r\n    readonly : readonly,\r\n    type: USER_TYPE.HUMAN,\r\n    turn: false,\r\n    choices: [],\r\n    cardSelected: undefined,\r\n    show: false,\r\n    status: PLAYER_STATUS.PLAYING,\r\n  }\r\n}\r\n\r\nexport const Player = (props) => {\r\n  const [choising, setChoising] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setChoising(false);\r\n  }, [props.status]);\r\n\r\n\r\n  const onChoiceClick = () => {\r\n    setChoising(true);\r\n    props.onReady();\r\n  }\r\n\r\n  return (\r\n    <div className={`card player text-white ${props.turn ? \"bg-primary\" : \"bg-secondary\"} ${props.data.status == PLAYER_STATUS.ROUND_WINNER && \"blink bg-warning\"}`} style={{minWidth: \"160px\"}}>\r\n      \r\n      <div className=\"card-header  d-flex justify-content-between align-items-center p-2\" style={{minHeight: \"38px\"}}>\r\n        {props.data.type === USER_TYPE.HUMAN && \r\n          <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fill-rule=\"evenodd\" d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"></path>\r\n          </svg>        \r\n        }\r\n        {props.data.type === USER_TYPE.CPU && \r\n          <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-cpu\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fill-rule=\"evenodd\" d=\"M5 0a.5.5 0 0 1 .5.5V2h1V.5a.5.5 0 0 1 1 0V2h1V.5a.5.5 0 0 1 1 0V2h1V.5a.5.5 0 0 1 1 0V2A2.5 2.5 0 0 1 14 4.5h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14a2.5 2.5 0 0 1-2.5 2.5v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14A2.5 2.5 0 0 1 2 11.5H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2A2.5 2.5 0 0 1 4.5 2V.5A.5.5 0 0 1 5 0zm-.5 3A1.5 1.5 0 0 0 3 4.5v7A1.5 1.5 0 0 0 4.5 13h7a1.5 1.5 0 0 0 1.5-1.5v-7A1.5 1.5 0 0 0 11.5 3h-7zM5 6.5A1.5 1.5 0 0 1 6.5 5h3A1.5 1.5 0 0 1 11 6.5v3A1.5 1.5 0 0 1 9.5 11h-3A1.5 1.5 0 0 1 5 9.5v-3zM6.5 6a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\"></path>\r\n          </svg>    \r\n        }\r\n     \r\n        {props.data.victories > 0 && \r\n          <span className=\"badge badge-warning badge-pill pb-1\" title=\"victories\">\r\n            {props.data.victories}\r\n            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trophy ml-1\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fill-rule=\"evenodd\" d=\"M2.5.5A.5.5 0 0 1 3 0h10a.5.5 0 0 1 .5.5c0 .538-.012 1.05-.034 1.536a3 3 0 1 1-1.133 5.89c-.79 1.865-1.878 2.777-2.833 3.011v2.173l1.425.356c.194.048.377.135.537.255L13.3 15.1a.5.5 0 0 1-.3.9H3a.5.5 0 0 1-.3-.9l1.838-1.379c.16-.12.343-.207.537-.255L6.5 13.11v-2.173c-.955-.234-2.043-1.146-2.833-3.012a3 3 0 1 1-1.132-5.89A33.076 33.076 0 0 1 2.5.5zm.099 2.54a2 2 0 0 0 .72 3.935c-.333-1.05-.588-2.346-.72-3.935zm10.083 3.935a2 2 0 0 0 .72-3.935c-.133 1.59-.388 2.885-.72 3.935zM3.504 1c.007.517.026 1.006.056 1.469.13 2.028.457 3.546.87 4.667C5.294 9.48 6.484 10 7 10a.5.5 0 0 1 .5.5v2.61a1 1 0 0 1-.757.97l-1.426.356a.5.5 0 0 0-.179.085L4.5 15h7l-.638-.479a.501.501 0 0 0-.18-.085l-1.425-.356a1 1 0 0 1-.757-.97V10.5A.5.5 0 0 1 9 10c.516 0 1.706-.52 2.57-2.864.413-1.12.74-2.64.87-4.667.03-.463.049-.952.056-1.469H3.504z\"></path>\r\n            </svg>\r\n          </span>\r\n        }\r\n      </div>\r\n\r\n      <div className=\"card-body p-2\">\r\n        \r\n        <div className=\"card-title\">\r\n        {props.data.name.substring(0,6)}{props.data.name.length>6 && \"…\"}\r\n\r\n        </div>\r\n\r\n        <div className=\"card-text text-center mb-3\">\r\n          <Choice card={props.data.cardSelected} show={props.show} />\r\n        </div>\r\n        <div style={{minHeight: \"40px\"}}>\r\n          {props.data.type === USER_TYPE.HUMAN && props.turn &&\r\n            <button className=\"btn btn-success\" onClick={onChoiceClick} disabled={!props.turn}>\r\n              Choice {props.readyCountDown > 0 && <span>({props.readyCountDown})</span>}\r\n            </button>\r\n          }\r\n          {props.data.type === USER_TYPE.CPU && props.turn &&\r\n            <button className=\"btn btn-success\" onClick={props.onReady} disabled>\r\n              <div className=\"spinner-border  spinner-border-sm text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div> Choosing\r\n            </button>\r\n          }\r\n          {!props.turn && false &&\r\n            <button className=\"btn btn-success\" onClick={props.onReady} disabled>\r\n              Waiting\r\n            </button>\r\n          }\r\n          {props.data.status == PLAYER_STATUS.PLAYING && false &&\r\n            <div className=\"alert alert-info\">Playing</div>\r\n          }\r\n          {props.data.status == PLAYER_STATUS.ROUND_WINNER &&\r\n            <div className=\"alert alert-success m-1 p-1\">Winner ({props.data.score})</div>\r\n          }\r\n          {props.data.status == PLAYER_STATUS.ROUND_LOST &&\r\n            <div className=\"alert alert-danger m-1 p-1\">Loser ({props.data.score})</div>\r\n          }\r\n          {props.data.status == PLAYER_STATUS.ROUND_TIED &&\r\n            <div className=\"alert alert-success m-1 p-1\">Tied ({props.data.score})</div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Card, coveredCard } from './Cards';\r\nimport { USER_TYPE } from './Player';\r\n\r\nexport const Slot = (props) => {\r\n  //const [covered, setCovered] = useState(true);\r\n  const handleSelectClick = () => {\r\n    props.onSelect(props.card);\r\n  }\r\n\r\n  return (\r\n      <button className=\"btn m-0 p-0\" onClick={handleSelectClick} disabled={props.player.type == USER_TYPE.CPU}>\r\n        {props.player.type == USER_TYPE.CPU &&\r\n          <Card card={coveredCard} />\r\n        }\r\n        {props.player.type == USER_TYPE.HUMAN &&\r\n          <Card card={props.card} />\r\n        }\r\n      </button>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { cardBeatTo, cards, coveredCard } from './Cards';\r\nimport { Player, PLAYER_STATUS, USER_TYPE } from './Player';\r\nimport { SESSION_STATE } from './Session';\r\nimport { Slot } from './Slot';\r\n\r\n\r\nexport const emptyBoard = () => { return {\r\n  players: [],\r\n  current: 0,\r\n  state: SESSION_STATE.START,\r\n  roundHasWinner: false,\r\n}}\r\n\r\n\r\nexport const Board = (props) => {\r\n  \r\n  const [data, setData] = useState({...emptyBoard(), players: props.players} );\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    //update end of round (si todos los jugadores en estado PLAYING tienen carta seleccionada)\r\n    if(data.players.length > 0 && data.players.filter(player => player.status === PLAYER_STATUS.PLAYING).every(player => !!player.cardSelected)){\r\n      setData({\r\n        ...data, \r\n        state : SESSION_STATE.END_ROUND\r\n      });\r\n      autoShowCards();\r\n    }\r\n\r\n    //si el usuario actual no esta jugando porque perdio le pongo una carga cubierta\r\n    if( data.current in data.players && data.players[data.current].status === PLAYER_STATUS.ROUND_LOST) {\r\n      handleCardSelect(coveredCard);\r\n      return;\r\n    }\r\n\r\n    //si el usuario actual es la maquina, dejo un tiempo de espera para que parezca que la cpu esta pensando antes de decidir\r\n    if( data.current in data.players && data.players[data.current].type === USER_TYPE.CPU) {\r\n      handlePlayerReady();\r\n      setTimeout(() => {\r\n        handleCardSelect(cards[getRandomInt(0,5)]);;\r\n      }, 500);\r\n    }\r\n  }, [data.current] );\r\n\r\n  const nextTurn = () => {\r\n    return data.current + 1;\r\n  }\r\n\r\n  \r\n  const handleCardSelect = (card) => {\r\n    setData({\r\n      ...data, \r\n      players: data.players.map((item, j) => {\r\n        return (j === data.current) ? {...item, cardSelected: card} : item;\r\n      }),\r\n      current: nextTurn(),\r\n      state: SESSION_STATE.START\r\n    });\r\n\r\n    console.log(data)\r\n  }\r\n\r\n\r\n  \r\n  const handleShowCards = () => {\r\n    setData({...data, state: SESSION_STATE.SHOW_CARDS});\r\n    setTimeout(()=>{handleShowResults()}, 1000)\r\n  }\r\n\r\n  const handleShowResults = () => {\r\n\r\n\r\n    const cardsSelected = data.players\r\n      .filter(player => player.status === PLAYER_STATUS.PLAYING)\r\n      .map(player => player.cardSelected);\r\n\r\n      //este filtro es para eliminar duplicados\r\n    const cardsSelectedUniques = cardsSelected.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n    const scores = cardsSelectedUniques.map(card1 => {\r\n      return {\r\n        name: card1.name,\r\n        value: cardsSelected.filter(card2 => cardBeatTo(card1, card2)).length,\r\n        count: cardsSelected.filter(card2 => card1.name === card2.name).length,\r\n      }\r\n    });\r\n    const maxScore = Math.max.apply(null, scores.map(score => {return score.value} ));\r\n    const hasWinner = scores.filter(s => s.value == maxScore).length == 1 &&  scores.filter(s => s.value == maxScore)[0].count == 1 ;\r\n    const winnersStatus = hasWinner ? PLAYER_STATUS.ROUND_WINNER : PLAYER_STATUS.ROUND_TIED;\r\n\r\n    setData({\r\n      ...data, \r\n      state: SESSION_STATE.SHOW_RESULTS,\r\n      roundHasWinner: hasWinner,\r\n      players: data.players.map((player) => {\r\n        if(player.status !== PLAYER_STATUS.PLAYING){\r\n          return player;\r\n        }else{\r\n          const score = scores.find(s => s.name === player.cardSelected.name).value\r\n          console.log({cardsSelected: cardsSelected, scores: scores, maxScore: maxScore, hasWinner: hasWinner, winnersStatus: winnersStatus, player: player, score: score});\r\n          return {\r\n            ...player, \r\n            score: score,\r\n            status: score == maxScore ? winnersStatus : PLAYER_STATUS.ROUND_LOST,\r\n            victories: score == maxScore && hasWinner ? player.victories + 1 : player.victories,\r\n          };\r\n        }\r\n      })\r\n\r\n    });\r\n  \r\n  }\r\n\r\n \r\n  const handleNextRound = () => {\r\n    setData({\r\n      ...data, \r\n      roundHasWinner: false,\r\n      state: SESSION_STATE.START,\r\n      current: 0,\r\n      players: data.players.map(player => {\r\n        return {\r\n          ...player, \r\n          //deselecciono la carta\r\n          cardSelected: undefined, \r\n          //reinicio el score\r\n          score: 0, \r\n          //si no hubo ganador y est jugador perdio, no juega la siguiente ronda\r\n          status: !data.roundHasWinner && player.status === PLAYER_STATUS.ROUND_LOST ? player.status : PLAYER_STATUS.PLAYING,\r\n        }\r\n      }\r\n\r\n      ) \r\n    });\r\n  }\r\n\r\n  const handlePlayerReady = () => {\r\n    //el usuario dice que esta listo, pero si es cpu tengo que elegir yo la carta::\r\n    setData({...data, state: SESSION_STATE.PLAYER_READY});\r\n  }\r\n\r\n  //funcion extraida de developer.mozilla.org\r\n  //https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Math/random\r\n  const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  const autoShowCards = () => {\r\n    \r\n    Swal.fire({\r\n      title: 'RPSLS!',\r\n      html: 'All players have chosen.',\r\n      timer: 500,\r\n      timerProgressBar: true,\r\n      willOpen: () => {\r\n        Swal.showLoading()\r\n      },\r\n      willClose: () => {\r\n        handleShowResults()\r\n      }\r\n    }).then((result) => {\r\n\r\n    })\r\n  } \r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <div className=\"row\" style={{minHeight: \"55px\"}}>\r\n        <div className=\"col col-12 mh-100\">\r\n          <button className=\"btn btn-danger m-1\" onClick={() => {props.onExitBoard(data.players)}}>Exit</button>\r\n          {data.state == SESSION_STATE.END_ROUND && <button className=\"btn btn-info m-1\" onClick={handleShowCards}>Show Cards</button>}\r\n          {data.state == SESSION_STATE.SHOW_RESULTS && data.roundHasWinner && <button className=\"btn btn-success m-1\" onClick={handleNextRound}>Next Round</button>}\r\n          {data.state == SESSION_STATE.SHOW_RESULTS && !data.roundHasWinner && <button className=\"btn btn-warning m-1\" onClick={handleNextRound}>Tie-breaker</button>}\r\n        </div>   \r\n      </div>\r\n      <div className=\"row d-flex justify-content-center\">\r\n        {data.players.map((player, index) => \r\n          <div className=\"col-6 col-md-4 col-lg-2 mb-3\">\r\n            <Player key={`playerBoard-${player.index}`} data={player} onReady={handlePlayerReady} turn={index == data.current} show={data.state >= SESSION_STATE.SHOW_CARDS} />\r\n          </div>\r\n        )}  \r\n      </div>\r\n\r\n      <div className={`container fixed-bottom overflow-auto ${data.state === SESSION_STATE.PLAYER_READY && \"w3-animate-bottom\"}`}>\r\n        {data.state === SESSION_STATE.PLAYER_READY &&\r\n\r\n          <div className=\"row\">\r\n            {cards.map(card => \r\n              <div className=\"col m-0 p-0\" key={`slot_${card.name}`}>\r\n                <Slot card={card} onSelect={() => handleCardSelect(card)} player={data.players[data.current]}/>\r\n              </div> \r\n            )} \r\n          </div>\r\n\r\n        }\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { PLAYER_STATUS, USER_TYPE } from './Player';\r\n\r\nexport const PlayerConfig = (props) => {\r\n\r\n  const [data, setData ] = useState(props.data)\r\n  const [error, setError ] = useState(false)\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(data.name == \"\"){\r\n      setError(true);\r\n      return;\r\n    }\r\n    props.onConfirmPlayer({...data, ok: true});\r\n  }\r\n  \r\n  const handleNameChange = (event) => {\r\n    setData({...data, name: event.target.value});\r\n  }\r\n\r\n  const handleCpuClick = (event) => {\r\n    setData({...data, name: \"CPU\", type: USER_TYPE.CPU});\r\n  }\r\n  \r\n  const handleHumanClick = (event) => {\r\n    setData({...data, name: \"\", type: USER_TYPE.HUMAN});\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      {\r\n        <form className={`${error && \"was-validated\"}`} onSubmit={handleSubmit} noValidate>\r\n\r\n          <div className=\"input-group input-group-sm\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Player {data.index}</span>\r\n            </div>\r\n            <input className=\"form-control\" placeholder=\"Name\" value={data.name} autoFocus={data.index!=2} disabled={data.type == USER_TYPE.CPU} onChange={handleNameChange} required maxLength={30}/>\r\n            \r\n            <div className=\"input-group-append\">\r\n              {data.type == USER_TYPE.CPU && <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={handleHumanClick}>HUMAN</button>}\r\n              {data.type == USER_TYPE.HUMAN && <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={handleCpuClick}>CPU</button>}\r\n              <button type=\"submit\" className=\"btn btn-outline-success\">Confirm</button>\r\n              {!data.readonly && <button className=\"btn btn-outline-danger\" onClick={() => props.onCancelPlayer()}>Cancel</button>}\r\n            </div>\r\n          </div>\r\n            <div className=\"invalid-feedback\">\r\n              Please choose a name.\r\n            </div>\r\n        </form>\r\n\r\n      }\r\n    </>\r\n  )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { Board } from './Board';\r\nimport { playerEmpty, PLAYER_STATUS } from './Player';\r\nimport { PlayerConfig } from './PlayerConfig';\r\n\r\n\r\nexport const SESSION_STATE = {\r\n  CONFIG: 0,\r\n  START: 1,\r\n  PLAYER_READY: 2,\r\n  END_ROUND: 3,\r\n  SHOW_CARDS: 4,\r\n  SHOW_RESULTS: 5\r\n}\r\n\r\nexport const emptySession = {\r\n    playersSlots: [\r\n      {...playerEmpty(true), index: 1},\r\n      {...playerEmpty(true), index: 2},\r\n    ],\r\n    players: [],\r\n    start: false,\r\n    state: SESSION_STATE.CONFIG,\r\n    playersCounter: 2\r\n  }\r\n\r\nexport const Session = (props) => {\r\n\r\n  const [data, setData] = useState(emptySession);\r\n  const [ok, setOk] = useState(false);\r\n\r\n  useEffect(() => { \r\n    //update every players settings ok for start\r\n    setOk(data.playersSlots.length === 0 );\r\n  }, [data.playersSlots] );\r\n\r\n  const handleExitBoard = (players) => {\r\n    setData({\r\n      ...data, \r\n      state: SESSION_STATE.CONFIG,\r\n      players: players.map(player => ({\r\n        ...player, \r\n        //deselecciono la carta\r\n        cardSelected: undefined, \r\n        //reinicio el score\r\n        score: 0, \r\n        //si no hubo ganador y est jugador perdio, no juega la siguiente ronda\r\n        status: PLAYER_STATUS.PLAYING,\r\n      })) \r\n    });\r\n  }  \r\n\r\n  const handleRestart = () => {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      html: `Are you sure to restart?`,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'No',\r\n      showCancelButton: true,\r\n      focusCancel: true,\r\n      focusConfirm: false,\r\n      timer: 4000,\r\n      timerProgressBar: true,\r\n    }).then((result) => {\r\n      result.isConfirmed && setData(emptySession);\r\n    })\r\n  }\r\n\r\n  const handleStart = () => {\r\n    setData({...data, state: SESSION_STATE.START});\r\n  }\r\n  \r\n  const handleRemovePlayer = (player) => {\r\n    Swal.fire({\r\n      icon: 'info',\r\n      html: `Are you sure to eliminate ${player.name}?`,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'No',\r\n      showCancelButton: true,\r\n      focusCancel: true,\r\n      focusConfirm: false,\r\n      timer: 4000,\r\n      timerProgressBar: true,\r\n    }).then((result) => {\r\n      result.isConfirmed && setData({\r\n        ...data, \r\n        players: data.players.filter(item => item !== player),\r\n      });\r\n    })\r\n  }\r\n\r\n  const handleRemovePlayerSlot = (slot) => {\r\n    setData({...data, playersSlots: data.playersSlots.filter(item => item !== slot)});\r\n  }\r\n\r\n  const handleConfirmPlayer = (playerSlot, player) =>{\r\n    setData({\r\n      ...data, \r\n      players: [\r\n        ...data.players, player\r\n      ],\r\n      playersSlots: data.playersSlots.filter(slot => playerSlot !== slot)\r\n    });\r\n  };\r\n\r\n  const handleAddPlayerSlot = () => {\r\n    setData({\r\n      ...data, \r\n      playersSlots: [{ ...playerEmpty(false), index: data.playersCounter + 1 } ], \r\n      playersCounter: data.playersCounter + 1, \r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n        <div className={`container overflow-auto ${data.state == SESSION_STATE.CONFIG && \"w3-animate-top\"}`}>\r\n          {data.state == SESSION_STATE.CONFIG &&\r\n            <>\r\n              <div className=\"row\" style={{minHeight: \"55px\"}}>\r\n                <div className=\"col col-12 mh-100\">\r\n                  {data.players.length > 0 && <button className=\"btn btn-danger m-1\" onClick={handleRestart}>Restart</button>}\r\n                  {data.players.length > 1 && data.playersSlots.length == 0 && <button className=\"btn btn-success m-1\" onClick={handleStart}>Play</button>}\r\n                </div>   \r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col col-2 d-none d-sm-none d-md-block\"> </div>\r\n                <div className=\"col col-12 col-md-8 \"> \r\n                  <ul className=\"list-group\">\r\n\r\n                    <li className=\"list-group-item align-items-center\">\r\n                      Players\r\n                    </li>\r\n\r\n                    {data.players.map(player => \r\n                      <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={`playerOk-${player.index}`}>\r\n                        {player.name}\r\n                        <span>\r\n                          <span className=\"badge badge-secondary badge-pill\">{player.victories}</span>\r\n                          <a className=\"btn btn-outline-primary btn-sm ml-2\" onClick={() => {handleRemovePlayer(player)}}>\r\n                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                              <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                            </svg>\r\n                          </a>\r\n                        </span>\r\n                        \r\n                      </li>\r\n                    )}\r\n\r\n                    {data.playersSlots.map(playerSlot => \r\n                      <li className=\"list-group-item\" key={playerSlot.index}>\r\n                        <PlayerConfig data={playerSlot} onConfirmPlayer={(player) => {handleConfirmPlayer(playerSlot, player)}} onCancelPlayer={() => handleRemovePlayerSlot(playerSlot)}/>\r\n                      </li>\r\n                    )}\r\n\r\n                    {data.playersSlots.length == 0 && \r\n                      <li className=\"list-group-item\">\r\n                        <button className=\"btn btn-primary\" onClick={handleAddPlayerSlot}>Add Player</button>\r\n                      </li>\r\n                    }\r\n                  </ul>  \r\n                </div>\r\n                <div className=\"col col-2 d-none d-sm-none d-md-block\"> </div>\r\n              </div>\r\n            </>\r\n          }\r\n        </div>\r\n\r\n\r\n        <div className={`container overflow-auto ${data.state >= SESSION_STATE.START && \"w3-animate-top\"}`}>\r\n          {data.state >= SESSION_STATE.START &&\r\n            <Board players={data.players} onExitBoard={handleExitBoard}/>\r\n          }\r\n        </div>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Nav } from './Nav';\r\nimport { Session } from './Session';\r\n\r\nexport const Game = (props) => {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Session />\r\n    </>\r\n  )\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Game } from './components/Game';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Game/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.scss';\r\n\r\n\r\n\r\nimport 'sweetalert2/dist/sweetalert2.min.css'\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}