{"version":3,"sources":["logo.svg","components/Intro.jsx","components/Nav.jsx","components/Cards.jsx","components/Choice.jsx","components/VictoriesCounter.jsx","components/Player.jsx","providers/PlayersContext.jsx","components/Slot.jsx","components/Board.jsx","components/PlayerConfig.jsx","components/Players.jsx","components/Session.jsx","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Intro","props","className","to","src","Nav","href","coveredCard","name","beat","card","message","image","emptyCard","cards","Card","style","width","textAlign","backgroundColor","alt","Choice","show","VictoriesCounter","victories","title","height","viewBox","fill","xmlns","d","USER_TYPE","PLAYER_STATUS","Player","turn","data","status","minWidth","minHeight","type","substring","length","cardSelected","onClick","onReady","disabled","readyCountDown","role","score","nextPlayerIndex","players","Math","max","apply","map","player","index","PlayersContext","React","createContext","Slot","onSelect","ROUND_STATE","Board","useState","current","state","roundHasWinner","setData","useContext","setPlayers","useEffect","filter","every","autoShowCards","handleCardSelect","handlePlayerReady","setTimeout","getRandomInt","setter","item","j","selectCard","handleShowResults","cardsSelected","scores","v","i","a","indexOf","card1","value","card2","some","b","cardBeatTo","count","maxScore","hasWinner","s","winnersStatus","find","roundResultPlayersUpdate","handleNextRound","undefined","min","floor","random","Swal","fire","html","timer","timerProgressBar","willOpen","showLoading","willClose","then","result","onExitBoard","PlayerConfig","error","setError","onSubmit","event","preventDefault","onConfirmPlayer","ok","noValidate","placeholder","autoFocus","onChange","target","required","maxLength","readonly","onCancelPlayer","Players","onPlayersOkChange","playersSlots","setPlayersSlots","handleRemovePlayerSlot","slot","handleConfirmPlayer","playerSlot","addPlayer","icon","confirmButtonText","cancelButtonText","showCancelButton","focusCancel","focusConfirm","isConfirmed","handleRemovePlayer","choices","SESSION_STATE","Session","playersOk","Provider","Game","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a217a1c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Intro = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"container d-flex justify-content-center fixed-top mt-5\">\r\n        <div className=\"intro-spinner\" >\r\n          <Link to=\"/game\" className=\"btn btn-primary btn-lg intro-spinner start\">Start</Link>\r\n          <div className=\"intro-spinner-hand scissors\">\r\n            <img src=\"assets/intro_scissors.png\" />\r\n          </div>\r\n          <div className=\"intro-spinner-hand lizard\">\r\n            <img src=\"assets/intro_lizard.png\" />\r\n          </div>\r\n          <div className=\"intro-spinner-hand spock\">\r\n            <img src=\"assets/intro_spock.png\"/>\r\n          </div>\r\n          <div className=\"intro-spinner-hand paper\">\r\n            <img src=\"assets/intro_paper.png\" />\r\n          </div>\r\n          <div className=\"intro-spinner-hand rock\">\r\n            <img src=\"assets/intro_rock.png\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Nav = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"#\">RPSLS Game</a>\r\n    </nav>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport const coveredCard =   {\r\n  name: \"Covered\", \r\n  beat: [\r\n    { card: \"\", message: \"\" },\r\n    { card: \"\", message: \"\" },\r\n  ],\r\n  image: \"assets/card_covered.png\"\r\n};\r\n\r\nexport const emptyCard =   {\r\n  name: \"Empty\", \r\n  beat: [\r\n    { card: \"\", message: \"\" },\r\n    { card: \"\", message: \"\" },\r\n  ],\r\n  image: \"assets/card_empty.png\"\r\n};\r\n\r\nexport const cards = [\r\n  {\r\n    name: \"Rock\", \r\n    beat: [\r\n      { card: \"Lizard\", message: \"Rock crushes Lizard\" },\r\n      { card: \"Scissors\", message: \"Rock crushes Scissors\" },\r\n    ],\r\n    image: \"assets/card_rock.png\"\r\n  },\r\n  {\r\n    name: \"Paper\", \r\n    beat: [\r\n      { card: \"Rock\", message: \"Paper covers Rock\" },\r\n      { card: \"Spock\", message: \"Paper disproves Spock\" },\r\n    ],\r\n    image: \"assets/card_paper.png\"\r\n  },\r\n  {\r\n    name: \"Scissors\", \r\n    beat: [\r\n      { card: \"Paper\", message: \"Scissors cuts Paper\" },\r\n      { card: \"Lizard\", message: \"Scissors decapitates Lizard\" },\r\n    ],\r\n    image: \"assets/card_scissors.png\"\r\n  },\r\n  {\r\n    name: \"Lizard\", \r\n    beat: [\r\n      { card: \"Spock\", message: \"Lizard poisons Spock\" },\r\n      { card: \"Paper\", message: \"Lizard eats Paper\" },\r\n    ],\r\n    image: \"assets/card_lizard.png\"\r\n  },\r\n  {\r\n    name: \"Spock\", \r\n    beat: [\r\n      { card: \"Scissors\", message: \"Spock smashes Scissors\" },\r\n      { card: \"Rock\", message: \"Spock vaporizes Rock\" },\r\n    ],\r\n    image: \"assets/card_spock.png\"\r\n  },\r\n];\r\n\r\nexport const cardBeatTo = (card1, card2) => card1.beat.some(b => b.card == card2.name);\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"card\" style={{width: \"100%\", textAlign: \"center\", backgroundColor: \"rgba(255, 255, 255, 0.192)\"}} >\r\n        <img src={props.card.image} style={{width: props.width ? props.width : \"100%\"}} className=\"rounded mx-auto d-block p-1 m-0\" alt=\"card-image\"/>       \r\n      </div>\r\n   </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Card, coveredCard, emptyCard } from './Cards';\r\n\r\nexport const Choice = (props) => {\r\n  return (\r\n    <div style={{width: \"100%\"}}>\r\n    {props.card && !props.show &&\r\n      <Card card={coveredCard} width=\"100px\"/>\r\n    }\r\n    {props.card && props.show &&\r\n      <Card card={props.card} width=\"100px\"/>\r\n    }\r\n    {!props.card && \r\n      <Card card={emptyCard} width=\"100px\"/>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport const VictoriesCounter = (props) => {\r\n  return (\r\n    <>\r\n      {props.victories > 0 && \r\n        <span className=\"badge badge-warning badge-pill pb-1\" title=\"victories\">\r\n          {props.victories}\r\n          <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trophy ml-1\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M2.5.5A.5.5 0 0 1 3 0h10a.5.5 0 0 1 .5.5c0 .538-.012 1.05-.034 1.536a3 3 0 1 1-1.133 5.89c-.79 1.865-1.878 2.777-2.833 3.011v2.173l1.425.356c.194.048.377.135.537.255L13.3 15.1a.5.5 0 0 1-.3.9H3a.5.5 0 0 1-.3-.9l1.838-1.379c.16-.12.343-.207.537-.255L6.5 13.11v-2.173c-.955-.234-2.043-1.146-2.833-3.012a3 3 0 1 1-1.132-5.89A33.076 33.076 0 0 1 2.5.5zm.099 2.54a2 2 0 0 0 .72 3.935c-.333-1.05-.588-2.346-.72-3.935zm10.083 3.935a2 2 0 0 0 .72-3.935c-.133 1.59-.388 2.885-.72 3.935zM3.504 1c.007.517.026 1.006.056 1.469.13 2.028.457 3.546.87 4.667C5.294 9.48 6.484 10 7 10a.5.5 0 0 1 .5.5v2.61a1 1 0 0 1-.757.97l-1.426.356a.5.5 0 0 0-.179.085L4.5 15h7l-.638-.479a.501.501 0 0 0-.18-.085l-1.425-.356a1 1 0 0 1-.757-.97V10.5A.5.5 0 0 1 9 10c.516 0 1.706-.52 2.57-2.864.413-1.12.74-2.64.87-4.667.03-.463.049-.952.056-1.469H3.504z\"></path>\r\n          </svg>\r\n        </span>\r\n      }\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport { Choice } from './Choice';\r\nimport { VictoriesCounter } from './VictoriesCounter';\r\n\r\nexport const USER_TYPE = {\r\n  CPU: 0,\r\n  HUMAN: 1\r\n}\r\n\r\nexport const PLAYER_STATUS = {\r\n  PLAYING: 0,\r\n  ROUND_WINNER: 1,\r\n  ROUND_LOST: 2,\r\n  ROUND_TIED: 3\r\n}\r\n\r\nexport const playerEmpty = (readonly) => {\r\n  return {\r\n    ok: false,\r\n    index: 0,\r\n    name : \"\",\r\n    victories : 0,\r\n    score : 0,\r\n    readonly : readonly,\r\n    type: USER_TYPE.HUMAN,\r\n    turn: false,\r\n    choices: [],\r\n    cardSelected: undefined,\r\n    show: false,\r\n    status: PLAYER_STATUS.PLAYING,\r\n  }\r\n}\r\n\r\nexport const Player = (props) => {\r\n\r\n  const onChoiceClick = () => {\r\n    props.onReady();\r\n  }\r\n\r\n  return (\r\n    <div className={`card player text-white ${props.turn ? \"bg-primary\" : \"bg-secondary\"} ${props.data.status == PLAYER_STATUS.ROUND_WINNER && \"blink bg-warning\"}`} style={{minWidth: \"160px\"}}>\r\n      \r\n      <div className=\"card-header  d-flex justify-content-between align-items-center p-2\" style={{minHeight: \"38px\"}}>\r\n        {props.data.type === USER_TYPE.HUMAN && \r\n          <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-person\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M10 5a2 2 0 1 1-4 0 2 2 0 0 1 4 0zM8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm6 5c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10z\"></path>\r\n          </svg>        \r\n        }\r\n        {props.data.type === USER_TYPE.CPU && \r\n          <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-cpu\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M5 0a.5.5 0 0 1 .5.5V2h1V.5a.5.5 0 0 1 1 0V2h1V.5a.5.5 0 0 1 1 0V2h1V.5a.5.5 0 0 1 1 0V2A2.5 2.5 0 0 1 14 4.5h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14v1h1.5a.5.5 0 0 1 0 1H14a2.5 2.5 0 0 1-2.5 2.5v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14h-1v1.5a.5.5 0 0 1-1 0V14A2.5 2.5 0 0 1 2 11.5H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2v-1H.5a.5.5 0 0 1 0-1H2A2.5 2.5 0 0 1 4.5 2V.5A.5.5 0 0 1 5 0zm-.5 3A1.5 1.5 0 0 0 3 4.5v7A1.5 1.5 0 0 0 4.5 13h7a1.5 1.5 0 0 0 1.5-1.5v-7A1.5 1.5 0 0 0 11.5 3h-7zM5 6.5A1.5 1.5 0 0 1 6.5 5h3A1.5 1.5 0 0 1 11 6.5v3A1.5 1.5 0 0 1 9.5 11h-3A1.5 1.5 0 0 1 5 9.5v-3zM6.5 6a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\"></path>\r\n          </svg>    \r\n        }\r\n        <VictoriesCounter victories={props.data.victories}/>\r\n      </div>\r\n\r\n      <div className=\"card-body p-2\">    \r\n\r\n        <div className=\"card-title\">\r\n          {props.data.name.substring(0,6)}{props.data.name.length>6 && \"…\"}\r\n        </div>\r\n\r\n        <div className=\"card-text text-center mb-3\">\r\n          <Choice card={props.data.cardSelected} show={props.show} />\r\n        </div>\r\n\r\n        <div style={{minHeight: \"40px\"}}>\r\n          {props.data.type === USER_TYPE.HUMAN && props.turn &&\r\n            <button className=\"btn btn-success\" onClick={onChoiceClick} disabled={!props.turn}>\r\n              Choice {props.readyCountDown > 0 && <span>({props.readyCountDown})</span>}\r\n            </button>\r\n          }\r\n          {props.data.type === USER_TYPE.CPU && props.turn &&\r\n            <button className=\"btn btn-success\" onClick={props.onReady} disabled>\r\n              <div className=\"spinner-border  spinner-border-sm text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div> Choosing\r\n            </button>\r\n          }\r\n          {props.data.status == PLAYER_STATUS.PLAYING && false &&\r\n            <div className=\"alert alert-info\">Playing</div>\r\n          }\r\n          {props.data.status == PLAYER_STATUS.ROUND_WINNER &&\r\n            <div className=\"alert alert-success m-1 p-1\">Winner ({props.data.score})</div>\r\n          }\r\n          {props.data.status == PLAYER_STATUS.ROUND_LOST &&\r\n            <div className=\"alert alert-danger m-1 p-1\">Loser ({props.data.score})</div>\r\n          }\r\n          {props.data.status == PLAYER_STATUS.ROUND_TIED &&\r\n            <div className=\"alert alert-success m-1 p-1\">Tied ({props.data.score})</div>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { coveredCard } from \"../components/Cards\";\r\nimport { PLAYER_STATUS } from \"../components/Player\";\r\n\r\n// (A)\r\n\r\nconst removePlayer = (setter, index) => setter((players) => (players.filter(item => item.index !== index)) ) ;\r\nconst addPlayer = (setter, player) => setter((players) => ([...players, player]));\r\nconst clearPlayers = (setter) => setter([]);\r\nconst exitPlayers = (setter) => ( setter( (players) => (players.map(player => ({\r\n    ...player, \r\n    //deselecciono la carta\r\n    cardSelected: undefined, \r\n    //reinicio el score\r\n    score: 0, \r\n    //si no hubo ganador y est jugador perdio, no juega la siguiente ronda\r\n    status: PLAYER_STATUS.PLAYING,\r\n  })))));\r\n\r\nconst selectCard = (setter, index, card) => setter(players =>\r\n  players.map((item, j) => {\r\n    return (j === index) ? {...item, cardSelected: card} : item;\r\n  })\r\n)\r\n\r\nconst roundResultPlayersUpdate = (setter, scores, maxScore, hasWinner, winnersStatus ) => setter(players => \r\n  players.map((player) => {\r\n    if(player.status !== PLAYER_STATUS.PLAYING){\r\n      return player;\r\n    }else{\r\n      const score = scores.find(s => s.name === player.cardSelected.name).value\r\n      return {\r\n        ...player, \r\n        score: score,\r\n        status: score == maxScore ? winnersStatus : PLAYER_STATUS.ROUND_LOST,\r\n        victories: score == maxScore && hasWinner ? player.victories + 1 : player.victories,\r\n      };\r\n    }\r\n  })\r\n)\r\n\r\nconst nextRoundPlayersUpdate = (setter, roundHasWinner) => setter(players =>\r\n  players.map(player => {\r\n    return {\r\n      ...player, \r\n      //deselecciono la carta\r\n      cardSelected: !roundHasWinner && player.status === PLAYER_STATUS.ROUND_LOST ? coveredCard : undefined, \r\n      //reinicio el score\r\n      score: 0, \r\n      //si no hubo ganador y est jugador perdio, no juega la siguiente ronda\r\n      status: !roundHasWinner && player.status === PLAYER_STATUS.ROUND_LOST ? player.status : PLAYER_STATUS.PLAYING,\r\n    }\r\n  })\r\n)\r\n\r\nconst nextPlayerIndex = (players) => (Math.max.apply(null, players.map(player => {return player.index} )) | 0) + 1;\r\n// (B)\r\nconst PlayersContext = React.createContext(null); \r\n\r\n// (C)\r\nexport { addPlayer, removePlayer, clearPlayers, exitPlayers, selectCard, roundResultPlayersUpdate, nextRoundPlayersUpdate, nextPlayerIndex};\r\nexport default PlayersContext;","import React from 'react';\r\nimport { Card, coveredCard } from './Cards';\r\nimport { USER_TYPE } from './Player';\r\n\r\nexport const Slot = (props) => {\r\n\r\n  const handleSelectClick = () => {\r\n    props.onSelect(props.card);\r\n  }\r\n\r\n  return (\r\n      <button className=\"btn m-0 p-0\" onClick={handleSelectClick} disabled={props.player.type === USER_TYPE.CPU}>\r\n        {props.player.type === USER_TYPE.CPU &&\r\n          <Card card={coveredCard} />\r\n        }\r\n        {props.player.type === USER_TYPE.HUMAN &&\r\n          <Card card={props.card} />\r\n        }\r\n      </button>\r\n  )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PlayersContext, { nextRoundPlayersUpdate, roundResultPlayersUpdate, selectCard } from '../providers/PlayersContext';\r\nimport { cardBeatTo, cards, coveredCard } from './Cards';\r\nimport { Player, PLAYER_STATUS, USER_TYPE } from './Player';\r\nimport { SESSION_STATE } from './Session';\r\nimport { Slot } from './Slot';\r\n\r\nconst ROUND_STATE = {\r\n  START: 0,\r\n  PLAYER_READY: 1,\r\n  END_ROUND: 2,\r\n  SHOW_CARDS: 3,\r\n  SHOW_RESULTS: 4\r\n}\r\n\r\n\r\nexport const emptyBoard = () => { return {\r\n  current: 0,\r\n  state: ROUND_STATE.START,\r\n  roundHasWinner: false,\r\n}}\r\n\r\nexport const Board = (props) => {\r\n  \r\n  const [data, setData] = useState({...emptyBoard()} );\r\n  const [players, setPlayers] = useContext(PlayersContext);\r\n\r\n  useEffect(() => {\r\n\r\n    //update end of round (si todos los jugadores en estado PLAYING tienen carta seleccionada)\r\n    if(players.length > 0 && players.filter(player => player.status === PLAYER_STATUS.PLAYING).every(player => !!player.cardSelected)){\r\n      setData({\r\n        ...data, \r\n        state : ROUND_STATE.END_ROUND\r\n      });\r\n      autoShowCards();\r\n    }\r\n\r\n    //si el usuario actual no esta jugando porque perdio le pongo una carga cubierta\r\n    if( data.current in players && players[data.current].status === PLAYER_STATUS.ROUND_LOST) {\r\n      handleCardSelect(coveredCard);\r\n      return;\r\n    }\r\n\r\n    //si el usuario actual es la maquina, \r\n    //dejo un tiempo de espera entre medio segundo y dos segundos para que parezca que la cpu esta pensando antes de decidir\r\n    if( data.current in players && players[data.current].type === USER_TYPE.CPU) {\r\n      handlePlayerReady();\r\n      setTimeout(() => {\r\n        handleCardSelect(cards[getRandomInt(0,5)]);;\r\n      }, getRandomInt(500,2000));\r\n    }\r\n  }, [data.current] );\r\n\r\n  const nextTurn = () => {\r\n    return data.current + 1;\r\n  }\r\n\r\n  \r\n  const handleCardSelect = (card) => {\r\n    selectCard(setPlayers, data.current, card);\r\n    setData({\r\n      ...data, \r\n      current: nextTurn(),\r\n      state: ROUND_STATE.START\r\n    });\r\n    \r\n  }\r\n  \r\n  const handleShowCards = () => {\r\n    setData({...data, state: ROUND_STATE.SHOW_CARDS});\r\n    setTimeout(()=>{handleShowResults()}, 1000)\r\n  }\r\n\r\n  const handleShowResults = () => {\r\n    const cardsSelected = players\r\n      .filter(player => player.status === PLAYER_STATUS.PLAYING)\r\n      .map(player => player.cardSelected);\r\n\r\n      //este filtro es para eliminar duplicados\r\n    const cardsSelectedUniques = cardsSelected.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n    const scores = cardsSelectedUniques.map(card1 => {\r\n      return {\r\n        name: card1.name,\r\n        value: cardsSelected.filter(card2 => cardBeatTo(card1, card2)).length,\r\n        count: cardsSelected.filter(card2 => card1.name === card2.name).length,\r\n      }\r\n    });\r\n    const maxScore = Math.max.apply(null, scores.map(score => {return score.value} ));\r\n    const hasWinner = scores.filter(s => s.value == maxScore).length == 1 &&  scores.filter(s => s.value == maxScore)[0].count == 1 ;\r\n    const winnersStatus = hasWinner ? PLAYER_STATUS.ROUND_WINNER : PLAYER_STATUS.ROUND_TIED;\r\n    setData({\r\n      ...data, \r\n      state: ROUND_STATE.SHOW_RESULTS,\r\n      roundHasWinner: hasWinner,\r\n    });\r\n\r\n    roundResultPlayersUpdate(setPlayers, scores, maxScore, hasWinner, winnersStatus);\r\n\r\n  }\r\n\r\n \r\n  const handleNextRound = () => {\r\n    setData({\r\n      ...data, \r\n      roundHasWinner: false,\r\n      state: ROUND_STATE.START,\r\n      current: 0,\r\n    });\r\n    nextRoundPlayersUpdate(setPlayers, data.roundHasWinner);\r\n  }\r\n\r\n  const handlePlayerReady = () => {\r\n    //el usuario dice que esta listo, pero si es cpu tengo que elegir yo la carta::\r\n    setData({...data, state: ROUND_STATE.PLAYER_READY});\r\n  }\r\n\r\n  //funcion extraida de developer.mozilla.org\r\n  //https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Math/random\r\n  const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  const autoShowCards = () => {\r\n    \r\n    Swal.fire({\r\n      title: 'RPSLS!',\r\n      html: 'All players have chosen.',\r\n      timer: 500,\r\n      timerProgressBar: true,\r\n      willOpen: () => {\r\n        Swal.showLoading()\r\n      },\r\n      willClose: () => {\r\n        handleShowResults()\r\n      }\r\n    }).then((result) => {\r\n\r\n    })\r\n  } \r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\" style={{minHeight: \"55px\"}}>\r\n        <div className=\"col col-12 mh-100\">\r\n          <button className=\"btn btn-danger m-1\" onClick={() => {props.onExitBoard(data.players)}}>Exit</button>\r\n          {data.state == ROUND_STATE.END_ROUND && <button className=\"btn btn-info m-1\" onClick={handleShowCards}>Show Cards</button>}\r\n          {data.state == ROUND_STATE.SHOW_RESULTS && data.roundHasWinner && <button className=\"btn btn-success m-1\" onClick={handleNextRound}>Next Round</button>}\r\n          {data.state == ROUND_STATE.SHOW_RESULTS && !data.roundHasWinner && <button className=\"btn btn-warning m-1\" onClick={handleNextRound}>Tie-breaker</button>}\r\n        </div>   \r\n      </div>\r\n      <div className=\"row d-flex justify-content-center\">\r\n        {players.map((player, index) => \r\n          <div key={`player-${player.index}`} className=\"col-6 col-md-4 col-lg-2 mb-3\">\r\n            <Player data={player} onReady={handlePlayerReady} turn={index == data.current} show={data.state >= ROUND_STATE.SHOW_CARDS} />\r\n          </div>\r\n        )}  \r\n      </div>\r\n      <div className={`container fixed-bottom overflow-auto ${data.state === ROUND_STATE.PLAYER_READY && \"w3-animate-bottom\"}`}>\r\n        {data.state === ROUND_STATE.PLAYER_READY &&\r\n          <div className=\"row\">\r\n            {cards.map(card => \r\n              <div className=\"col m-0 p-0\" key={`card_slot-${card.name}`}>\r\n                <Slot card={card} onSelect={() => handleCardSelect(card)} player={players[data.current]}/>\r\n              </div> \r\n            )} \r\n          </div>\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { USER_TYPE } from './Player';\r\n\r\nexport const PlayerConfig = (props) => {\r\n\r\n  const [data, setData ] = useState(props.data)\r\n  const [error, setError ] = useState(\"\")\r\n  \r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if(data.name === \"\"){\r\n      setError(\"Name is required.\");\r\n      return;\r\n    }\r\n    props.onConfirmPlayer({...data, ok: true});\r\n  }\r\n  \r\n  const handleNameChange = (event) => {\r\n    setError(\"\");\r\n    setData({...data, name: event.target.value});\r\n  }\r\n\r\n  const handleCpuClick = (event) => {\r\n    setError(\"\");\r\n    setData({...data, name: \"CPU\", type: USER_TYPE.CPU});\r\n  }\r\n  \r\n  const handleHumanClick = (event) => {\r\n    setError(\"\");\r\n    setData({...data, name: \"\", type: USER_TYPE.HUMAN});\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <form className={`${error && \"was-validated\"} h-100`} onSubmit={handleSubmit} noValidate>\r\n        <div className=\"input-group input-group-sm\">\r\n\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Player {data.index}</span>\r\n          </div>\r\n          \r\n          <input className=\"form-control\" placeholder=\"Name\" value={data.name} autoFocus={data.index!=2} disabled={data.type == USER_TYPE.CPU} onChange={handleNameChange} required maxLength={30}/>\r\n          \r\n          <div className=\"input-group-append\">\r\n            {data.type == USER_TYPE.CPU && <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={handleHumanClick}>HUMAN</button>}\r\n            {data.type == USER_TYPE.HUMAN && <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={handleCpuClick}>CPU</button>}\r\n            <button type=\"submit\" className=\"btn btn-outline-success\">Confirm</button>\r\n            {!data.readonly && <button className=\"btn btn-outline-danger\" onClick={() => props.onCancelPlayer()}>Cancel</button>}\r\n          </div>\r\n          \r\n        </div>\r\n        {error &&  \r\n          <div className=\"input-group input-group-sm\"> \r\n            <div className=\"alert alert-danger p-1 w-100\">\r\n              {error}\r\n            </div>\r\n          </div>\r\n        }\r\n      </form>\r\n    </>\r\n  )\r\n\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PlayersContext, { addPlayer, nextPlayerIndex, removePlayer } from '../providers/PlayersContext';\r\nimport { playerEmpty } from './Player';\r\nimport { PlayerConfig } from './PlayerConfig';\r\nimport { VictoriesCounter } from './VictoriesCounter';\r\n\r\n\r\nexport const Players = (props) => {\r\n  \r\n  const {onPlayersOkChange} = props;\r\n  const [players, setPlayers] = useContext(PlayersContext);\r\n  const [playersSlots, setPlayersSlots] = useState([]);\r\n\r\n  useEffect(() => {\r\n    onPlayersOkChange( playersSlots.length === 0);\r\n  }, [playersSlots])\r\n\r\n  // const initSlots = () => {\r\n  //   for(var i = 0; i > players.length - 2; i++ ){\r\n  //     handleAddPlayerSlot();\r\n  //   }\r\n  // };\r\n\r\n  const handleRemovePlayer = (player) => {\r\n    Swal.fire({\r\n      icon: 'info',\r\n      html: `Are you sure to eliminate ${player.name}?`,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'No',\r\n      showCancelButton: true,\r\n      focusCancel: true,\r\n      focusConfirm: false,\r\n      timer: 4000,\r\n      timerProgressBar: true,\r\n    }).then((result) => {\r\n      if(result.isConfirmed){\r\n        removePlayer(setPlayers, player.index);\r\n      }\r\n    })\r\n  }\r\n\r\n   const handleRemovePlayerSlot = (slot) => {\r\n    setPlayersSlots(playersSlots.filter(item => item !== slot));\r\n  }\r\n\r\n  const handleConfirmPlayer = (playerSlot, player) =>{\r\n    handleRemovePlayerSlot(playerSlot);\r\n    addPlayer(setPlayers, player);\r\n  };\r\n\r\n  const handleAddPlayerSlot = () => {\r\n    setPlayersSlots(playersSlots => [...playersSlots, { ...playerEmpty(false), index: nextPlayerIndex(players) }] );\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col col-2 d-none d-sm-none d-md-block\"> </div>\r\n        <div className=\"col col-12 col-md-8 \"> \r\n          <ul className=\"list-group\">\r\n\r\n            <li className=\"list-group-item align-items-center\">\r\n              Players\r\n            </li>\r\n\r\n            {players.map(player => \r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\" key={`playerOk-${player.index}`}>\r\n                {player.name}\r\n                <span>\r\n                  <VictoriesCounter victories={player.victories}/>\r\n                  <button className=\"btn btn-outline-primary btn-sm ml-2\" onClick={() => {handleRemovePlayer(player)}}>\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                      <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                    </svg>\r\n                  </button>\r\n                </span>\r\n              </li>\r\n            )}\r\n\r\n            {playersSlots.map(playerSlot => \r\n              <li className=\"list-group-item\" key={playerSlot.index}>\r\n                <PlayerConfig data={playerSlot} onConfirmPlayer={(player) => {handleConfirmPlayer(playerSlot, player)}} onCancelPlayer={() => handleRemovePlayerSlot(playerSlot)}/>\r\n              </li>\r\n            )}\r\n\r\n            {playersSlots.length === 0 && \r\n              <li className=\"list-group-item\">\r\n                <button className=\"btn btn-primary\" onClick={handleAddPlayerSlot}>Add Player</button>\r\n              </li>\r\n            }\r\n          </ul>  \r\n        </div>\r\n        <div className=\"col col-2 d-none d-sm-none d-md-block\"> </div>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PlayersContext, {clearPlayers, exitPlayers} from '../providers/PlayersContext';\r\nimport { Board } from './Board';\r\nimport { Players } from './Players';\r\n\r\n\r\nexport const SESSION_STATE = {\r\n  CONFIG: 0,\r\n  START: 1,\r\n}\r\n\r\nexport const Session = (props) => {\r\n\r\n  const [data, setData] = useState({\r\n    state: SESSION_STATE.CONFIG,\r\n    playersOk: true,\r\n  });\r\n  \r\n  const [players, setPlayers] = useState([]);\r\n\r\n  const handleExitBoard = (players) => {\r\n    setData({\r\n      ...data, \r\n      state: SESSION_STATE.CONFIG,\r\n    });\r\n    exitPlayers(setPlayers);\r\n  }  \r\n\r\n  const handleRestartClick = () => {\r\n    Swal.fire({\r\n      icon: 'question',\r\n      html: `Are you sure to restart?`,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'No',\r\n      showCancelButton: true,\r\n      focusCancel: true,\r\n      focusConfirm: false,\r\n      timer: 4000,\r\n      timerProgressBar: true,\r\n    }).then((result) => {\r\n      if(result.isConfirmed){\r\n        clearPlayers(setPlayers);  \r\n      } \r\n    })\r\n  }\r\n\r\n  const handleStartClick = () => {\r\n    setData({...data, state: SESSION_STATE.START});\r\n  }\r\n  \r\n  const handlePlayersOkChange = (playersOk) => {\r\n    setData({...data, playersOk: playersOk})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PlayersContext.Provider value={[players, setPlayers]}>\r\n        <div className={`container overflow-auto ${data.state == SESSION_STATE.CONFIG && \"w3-animate-top\"}`}>\r\n          {data.state === SESSION_STATE.CONFIG &&\r\n            <>\r\n              <div className=\"row\" style={{minHeight: \"55px\"}}>\r\n                <div className=\"col col-12 mh-100\">\r\n                  {players.length > 1 && <button className=\"btn btn-danger m-1\" onClick={handleRestartClick}>Restart</button>}\r\n                  {players.length > 1 && data.playersOk && <button className=\"btn btn-success m-1\" onClick={handleStartClick}>Play</button>}\r\n                </div>   \r\n              </div>\r\n              <Players onPlayersOkChange={handlePlayersOkChange}/>\r\n            </>\r\n          }\r\n        </div>\r\n\r\n\r\n        <div className={`container overflow-auto ${data.state >= SESSION_STATE.START && \"w3-animate-top\"}`}>\r\n          {data.state >= SESSION_STATE.START &&\r\n            <Board onExitBoard={handleExitBoard}/>\r\n          }\r\n        </div>\r\n      </PlayersContext.Provider>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { Intro } from './Intro';\r\nimport { Nav } from './Nav';\r\nimport { Session } from './Session';\r\n\r\nexport const Game = (props) => {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/game\">\r\n            <Redirect to=\"/unq-ui-pablo-g-gonzalez-trabajo-final/game\"/>\r\n          </Route>\r\n          <Route path=\"/unq-ui-pablo-g-gonzalez-trabajo-final/game\" component={Session}/>\r\n          <Route path=\"*\" component={Intro}/>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Game } from './components/Game';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Game/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.scss';\r\nimport 'sweetalert2/dist/sweetalert2.min.css'\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}