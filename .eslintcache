[{"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\App.js":"1","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\index.js":"2","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Session.jsx":"3","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Player.jsx":"4","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Cards.jsx":"5","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Choice.jsx":"6","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Slot.jsx":"7","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\PlayerConfig.jsx":"8","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Game.jsx":"9","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\reportWebVitals.js":"10","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Nav.jsx":"11","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Board.jsx":"12"},{"size":201,"mtime":1606681517584,"results":"13","hashOfConfig":"14"},{"size":594,"mtime":1606371938298,"results":"15","hashOfConfig":"14"},{"size":6425,"mtime":1606720518972,"results":"16","hashOfConfig":"14"},{"size":2990,"mtime":1606717216412,"results":"17","hashOfConfig":"14"},{"size":2142,"mtime":1606684360035,"results":"18","hashOfConfig":"14"},{"size":443,"mtime":1606522169256,"results":"19","hashOfConfig":"14"},{"size":637,"mtime":1606572078828,"results":"20","hashOfConfig":"14"},{"size":2036,"mtime":1606718219955,"results":"21","hashOfConfig":"14"},{"size":139,"mtime":1606666874811,"results":"22","hashOfConfig":"14"},{"size":362,"mtime":1606346687655,"results":"23","hashOfConfig":"14"},{"size":221,"mtime":1606709380303,"results":"24","hashOfConfig":"14"},{"size":6890,"mtime":1606709512088,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"163p6h",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"49"},"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\App.js",["56"],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\index.js",[],["57","58"],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Session.jsx",["59","60","61","62","63","64"],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Player.jsx",["65","66","67","68","69","70"],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Cards.jsx",["71","72","73","74"],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Choice.jsx",[],["75","76"],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Slot.jsx",["77","78","79","80"],"import React, { useState } from 'react';\r\nimport { Card, coveredCard } from './Cards';\r\nimport { USER_TYPE } from './Player';\r\n\r\nexport const Slot = (props) => {\r\n  //const [covered, setCovered] = useState(true);\r\n  const handleSelectClick = () => {\r\n    props.onSelect(props.card);\r\n  }\r\n\r\n  return (\r\n      <button className=\"btn m-0 p-0\" onClick={handleSelectClick} disabled={props.player.type == USER_TYPE.CPU}>\r\n        {props.player.type == USER_TYPE.CPU &&\r\n          <Card card={coveredCard} />\r\n        }\r\n        {props.player.type == USER_TYPE.HUMAN &&\r\n          <Card card={props.card} />\r\n        }\r\n      </button>\r\n  )\r\n}","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\PlayerConfig.jsx",["81","82","83","84","85","86"],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Game.jsx",[],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\reportWebVitals.js",[],["87","88"],"C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Nav.jsx",["89"],"import React from 'react';\r\n\r\nexport const Nav = (props) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"#\">RPSLS Game</a>\r\n    </nav>\r\n  )\r\n}\r\n","C:\\Users\\PabloGabriel\\Documents\\Facultad\\Interfaces de usuario\\RepoTFI\\src\\components\\Board.jsx",["90","91","92","93","94","95","96","97","98","99","100"],"import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { cardBeatTo, cards, coveredCard } from './Cards';\r\nimport { Player, PLAYER_STATUS, USER_TYPE } from './Player';\r\nimport { SESSION_STATE } from './Session';\r\nimport { Slot } from './Slot';\r\n\r\n\r\nexport const emptyBoard = () => { return {\r\n  players: [],\r\n  current: 0,\r\n  state: SESSION_STATE.START,\r\n  roundHasWinner: false,\r\n}}\r\n\r\n\r\nexport const Board = (props) => {\r\n  \r\n  const [data, setData] = useState({...emptyBoard(), players: props.players} );\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    //update end of round (si todos los jugadores en estado PLAYING tienen carta seleccionada)\r\n    if(data.players.length > 0 && data.players.filter(player => player.status === PLAYER_STATUS.PLAYING).every(player => !!player.cardSelected)){\r\n      setData({\r\n        ...data, \r\n        state : SESSION_STATE.END_ROUND\r\n      });\r\n      autoShowCards();\r\n    }\r\n\r\n    //si el usuario actual no esta jugando porque perdio le pongo una carga cubierta\r\n    if( data.current in data.players && data.players[data.current].status === PLAYER_STATUS.ROUND_LOST) {\r\n      handleCardSelect(coveredCard);\r\n      return;\r\n    }\r\n\r\n    //si el usuario actual es la maquina, dejo un tiempo de espera para que parezca que la cpu esta pensando antes de decidir\r\n    if( data.current in data.players && data.players[data.current].type === USER_TYPE.CPU) {\r\n      handlePlayerReady();\r\n      setTimeout(() => {\r\n        handleCardSelect(cards[getRandomInt(0,5)]);;\r\n      }, 500);\r\n    }\r\n  }, [data.current] );\r\n\r\n  const nextTurn = () => {\r\n    return data.current + 1;\r\n  }\r\n\r\n  \r\n  const handleCardSelect = (card) => {\r\n    setData({\r\n      ...data, \r\n      players: data.players.map((item, j) => {\r\n        return (j === data.current) ? {...item, cardSelected: card} : item;\r\n      }),\r\n      current: nextTurn(),\r\n      state: SESSION_STATE.START\r\n    });\r\n\r\n    console.log(data)\r\n  }\r\n\r\n\r\n  \r\n  const handleShowCards = () => {\r\n    setData({...data, state: SESSION_STATE.SHOW_CARDS});\r\n    setTimeout(()=>{handleShowResults()}, 1000)\r\n  }\r\n\r\n  const handleShowResults = () => {\r\n\r\n\r\n    const cardsSelected = data.players\r\n      .filter(player => player.status === PLAYER_STATUS.PLAYING)\r\n      .map(player => player.cardSelected);\r\n\r\n      //este filtro es para eliminar duplicados\r\n    const cardsSelectedUniques = cardsSelected.filter((v, i, a) => a.indexOf(v) === i);\r\n\r\n    const scores = cardsSelectedUniques.map(card1 => {\r\n      return {\r\n        name: card1.name,\r\n        value: cardsSelected.filter(card2 => cardBeatTo(card1, card2)).length,\r\n        count: cardsSelected.filter(card2 => card1.name === card2.name).length,\r\n      }\r\n    });\r\n    const maxScore = Math.max.apply(null, scores.map(score => {return score.value} ));\r\n    const hasWinner = scores.filter(s => s.value == maxScore).length == 1 &&  scores.filter(s => s.value == maxScore)[0].count == 1 ;\r\n    const winnersStatus = hasWinner ? PLAYER_STATUS.ROUND_WINNER : PLAYER_STATUS.ROUND_TIED;\r\n\r\n    setData({\r\n      ...data, \r\n      state: SESSION_STATE.SHOW_RESULTS,\r\n      roundHasWinner: hasWinner,\r\n      players: data.players.map((player) => {\r\n        if(player.status !== PLAYER_STATUS.PLAYING){\r\n          return player;\r\n        }else{\r\n          const score = scores.find(s => s.name === player.cardSelected.name).value\r\n          console.log({cardsSelected: cardsSelected, scores: scores, maxScore: maxScore, hasWinner: hasWinner, winnersStatus: winnersStatus, player: player, score: score});\r\n          return {\r\n            ...player, \r\n            score: score,\r\n            status: score == maxScore ? winnersStatus : PLAYER_STATUS.ROUND_LOST,\r\n            victories: score == maxScore && hasWinner ? player.victories + 1 : player.victories,\r\n          };\r\n        }\r\n      })\r\n\r\n    });\r\n  \r\n  }\r\n\r\n \r\n  const handleNextRound = () => {\r\n    setData({\r\n      ...data, \r\n      roundHasWinner: false,\r\n      state: SESSION_STATE.START,\r\n      current: 0,\r\n      players: data.players.map(player => {\r\n        return {\r\n          ...player, \r\n          //deselecciono la carta\r\n          cardSelected: undefined, \r\n          //reinicio el score\r\n          score: 0, \r\n          //si no hubo ganador y est jugador perdio, no juega la siguiente ronda\r\n          status: !data.roundHasWinner && player.status === PLAYER_STATUS.ROUND_LOST ? player.status : PLAYER_STATUS.PLAYING,\r\n        }\r\n      }\r\n\r\n      ) \r\n    });\r\n  }\r\n\r\n  const handlePlayerReady = () => {\r\n    //el usuario dice que esta listo, pero si es cpu tengo que elegir yo la carta::\r\n    setData({...data, state: SESSION_STATE.PLAYER_READY});\r\n  }\r\n\r\n  //funcion extraida de developer.mozilla.org\r\n  //https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Objetos_globales/Math/random\r\n  const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  const autoShowCards = () => {\r\n    \r\n    Swal.fire({\r\n      title: 'RPSLS!',\r\n      html: 'All players have chosen.',\r\n      timer: 500,\r\n      timerProgressBar: true,\r\n      willOpen: () => {\r\n        Swal.showLoading()\r\n      },\r\n      willClose: () => {\r\n        handleShowResults()\r\n      }\r\n    }).then((result) => {\r\n\r\n    })\r\n  } \r\n\r\n  return (\r\n    <>\r\n\r\n\r\n      <div className=\"row\" style={{minHeight: \"55px\"}}>\r\n        <div className=\"col col-12 mh-100\">\r\n          <button className=\"btn btn-danger m-1\" onClick={() => {props.onExitBoard(data.players)}}>Exit</button>\r\n          {data.state == SESSION_STATE.END_ROUND && <button className=\"btn btn-info m-1\" onClick={handleShowCards}>Show Cards</button>}\r\n          {data.state == SESSION_STATE.SHOW_RESULTS && data.roundHasWinner && <button className=\"btn btn-success m-1\" onClick={handleNextRound}>Next Round</button>}\r\n          {data.state == SESSION_STATE.SHOW_RESULTS && !data.roundHasWinner && <button className=\"btn btn-warning m-1\" onClick={handleNextRound}>Tie-breaker</button>}\r\n        </div>   \r\n      </div>\r\n      <div className=\"row\">\r\n        {data.players.map((player, index) => \r\n          <div className=\"col-6 col-md-4 col-lg-2 mb-3\">\r\n            <Player key={`playerBoard-${player.index}`} data={player} onReady={handlePlayerReady} turn={index == data.current} show={data.state >= SESSION_STATE.SHOW_CARDS} />\r\n          </div>\r\n        )}  \r\n      </div>\r\n\r\n      <div className={`container fixed-bottom overflow-auto ${data.state === SESSION_STATE.PLAYER_READY && \"w3-animate-bottom\"}`}>\r\n        {data.state === SESSION_STATE.PLAYER_READY &&\r\n\r\n          <div className=\"row\">\r\n            {cards.map(card => \r\n              <div className=\"col m-0 p-0\" key={`slot_${card.name}`}>\r\n                <Slot card={card} onSelect={() => handleCardSelect(card)} player={data.players[data.current]}/>\r\n              </div> \r\n            )} \r\n          </div>\r\n\r\n        }\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n",{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":12},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"101","severity":1,"message":"109","line":31,"column":10,"nodeType":"103","messageId":"104","endLine":31,"endColumn":12},{"ruleId":"110","severity":1,"message":"111","line":118,"column":63,"nodeType":"112","messageId":"113","endLine":118,"endColumn":65},{"ruleId":"110","severity":1,"message":"111","line":119,"column":23,"nodeType":"112","messageId":"113","endLine":119,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":124,"column":72,"nodeType":"112","messageId":"113","endLine":124,"endColumn":74},{"ruleId":"114","severity":1,"message":"115","line":141,"column":27,"nodeType":"116","endLine":141,"endColumn":123},{"ruleId":"110","severity":1,"message":"111","line":158,"column":47,"nodeType":"112","messageId":"113","endLine":158,"endColumn":49},{"ruleId":"101","severity":1,"message":"117","line":34,"column":10,"nodeType":"103","messageId":"104","endLine":34,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":47,"column":111,"nodeType":"112","messageId":"113","endLine":47,"endColumn":113},{"ruleId":"110","severity":1,"message":"111","line":75,"column":30,"nodeType":"112","messageId":"113","endLine":75,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":78,"column":30,"nodeType":"112","messageId":"113","endLine":78,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":81,"column":30,"nodeType":"112","messageId":"113","endLine":81,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":84,"column":30,"nodeType":"112","messageId":"113","endLine":84,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":66,"column":73,"nodeType":"112","messageId":"113","endLine":66,"endColumn":75},{"ruleId":"110","severity":1,"message":"111","line":69,"column":39,"nodeType":"112","messageId":"113","endLine":69,"endColumn":41},{"ruleId":"110","severity":1,"message":"111","line":72,"column":39,"nodeType":"112","messageId":"113","endLine":72,"endColumn":41},{"ruleId":"118","severity":1,"message":"119","line":82,"column":9,"nodeType":"116","endLine":82,"endColumn":151},{"ruleId":"105","replacedBy":"120"},{"ruleId":"107","replacedBy":"121"},{"ruleId":"101","severity":1,"message":"122","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":12,"column":95,"nodeType":"112","messageId":"113","endLine":12,"endColumn":97},{"ruleId":"110","severity":1,"message":"111","line":13,"column":28,"nodeType":"112","messageId":"113","endLine":13,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":16,"column":28,"nodeType":"112","messageId":"113","endLine":16,"endColumn":30},{"ruleId":"101","severity":1,"message":"123","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":11,"column":18,"nodeType":"112","messageId":"113","endLine":11,"endColumn":20},{"ruleId":"110","severity":1,"message":"124","line":40,"column":103,"nodeType":"112","messageId":"113","endLine":40,"endColumn":105},{"ruleId":"110","severity":1,"message":"111","line":40,"column":128,"nodeType":"112","messageId":"113","endLine":40,"endColumn":130},{"ruleId":"110","severity":1,"message":"111","line":43,"column":26,"nodeType":"112","messageId":"113","endLine":43,"endColumn":28},{"ruleId":"110","severity":1,"message":"111","line":44,"column":26,"nodeType":"112","messageId":"113","endLine":44,"endColumn":28},{"ruleId":"105","replacedBy":"125"},{"ruleId":"107","replacedBy":"126"},{"ruleId":"114","severity":1,"message":"127","line":6,"column":7,"nodeType":"116","endLine":6,"endColumn":44},{"ruleId":"128","severity":1,"message":"129","line":47,"column":6,"nodeType":"130","endLine":47,"endColumn":20,"suggestions":"131"},{"ruleId":"110","severity":1,"message":"111","line":92,"column":50,"nodeType":"112","messageId":"113","endLine":92,"endColumn":52},{"ruleId":"110","severity":1,"message":"111","line":92,"column":70,"nodeType":"112","messageId":"113","endLine":92,"endColumn":72},{"ruleId":"110","severity":1,"message":"111","line":92,"column":106,"nodeType":"112","messageId":"113","endLine":92,"endColumn":108},{"ruleId":"110","severity":1,"message":"111","line":92,"column":128,"nodeType":"112","messageId":"113","endLine":92,"endColumn":130},{"ruleId":"110","severity":1,"message":"111","line":108,"column":27,"nodeType":"112","messageId":"113","endLine":108,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":109,"column":30,"nodeType":"112","messageId":"113","endLine":109,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":175,"column":23,"nodeType":"112","messageId":"113","endLine":175,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":176,"column":23,"nodeType":"112","messageId":"113","endLine":176,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":177,"column":23,"nodeType":"112","messageId":"113","endLine":177,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":183,"column":111,"nodeType":"112","messageId":"113","endLine":183,"endColumn":113},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'ok' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'choising' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["132"],["133"],"'useState' is defined but never used.","'PLAYER_STATUS' is defined but never used.","Expected '!==' and instead saw '!='.",["132"],["133"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'autoShowCards', 'data', 'handleCardSelect', and 'handlePlayerReady'. Either include them or remove the dependency array. Mutable values like 'data.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [autoShowCards, data, handleCardSelect, handlePlayerReady]",{"range":"137","text":"138"},[1552,1566],"[autoShowCards, data, handleCardSelect, handlePlayerReady]"]